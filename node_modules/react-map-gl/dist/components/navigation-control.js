'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _baseControl = require('./base-control');

var _baseControl2 = _interopRequireDefault(_baseControl);

var _autobind = require('../utils/autobind');

var _autobind2 = _interopRequireDefault(_autobind);

var _mapState = require('../utils/map-state');

var _mapState2 = _interopRequireDefault(_mapState);

var _deprecateWarn = require('../utils/deprecate-warn');

var _deprecateWarn2 = _interopRequireDefault(_deprecateWarn);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = (0, _assign2.default)({}, _baseControl2.default.propTypes, {
  // Custom className
  className: _propTypes2.default.string,
  /**
    * `onViewportChange` callback is fired when the user interacted with the
    * map. The object passed to the callback contains `latitude`,
    * `longitude` and `zoom` and additional state information.
    */
  onViewportChange: _propTypes2.default.func.isRequired
});

var defaultProps = (0, _assign2.default)({}, _baseControl2.default.defaultProps, {
  className: '',
  onViewportChange: function onViewportChange() {}
});

/*
 * PureComponent doesn't update when context changes, so
 * implementing our own shouldComponentUpdate here.
 */

var NavigationControl = function (_BaseControl) {
  (0, _inherits3.default)(NavigationControl, _BaseControl);

  function NavigationControl(props) {
    (0, _classCallCheck3.default)(this, NavigationControl);

    var _this = (0, _possibleConstructorReturn3.default)(this, (NavigationControl.__proto__ || (0, _getPrototypeOf2.default)(NavigationControl)).call(this, props));

    (0, _autobind2.default)(_this);
    // Check for deprecated props
    (0, _deprecateWarn2.default)(props);
    return _this;
  }

  (0, _createClass3.default)(NavigationControl, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return this.context.viewport.bearing !== nextContext.viewport.bearing;
    }
  }, {
    key: '_updateViewport',
    value: function _updateViewport(opts) {
      var viewport = this.context.viewport;

      var mapState = new _mapState2.default((0, _assign2.default)({}, viewport, opts));
      // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated
      var onViewportChange = this.props.onChangeViewport || this.props.onViewportChange;
      onViewportChange(mapState.getViewportProps());
    }
  }, {
    key: '_onZoomIn',
    value: function _onZoomIn() {
      this._updateViewport({ zoom: this.context.viewport.zoom + 1 });
    }
  }, {
    key: '_onZoomOut',
    value: function _onZoomOut() {
      this._updateViewport({ zoom: this.context.viewport.zoom - 1 });
    }
  }, {
    key: '_onResetNorth',
    value: function _onResetNorth() {
      this._updateViewport({ bearing: 0 });
    }
  }, {
    key: '_renderCompass',
    value: function _renderCompass() {
      var bearing = this.context.viewport.bearing;

      return (0, _react.createElement)('span', {
        className: 'mapboxgl-ctrl-compass-arrow',
        style: { transform: 'rotate(' + bearing + 'deg)' }
      });
    }
  }, {
    key: '_renderButton',
    value: function _renderButton(type, label, callback, children) {
      return (0, _react.createElement)('button', {
        key: type,
        className: 'mapboxgl-ctrl-icon mapboxgl-ctrl-' + type,
        type: 'button',
        title: label,
        onClick: callback,
        children: children
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var className = this.props.className;


      return (0, _react.createElement)('div', {
        className: 'mapboxgl-ctrl mapboxgl-ctrl-group ' + className,
        ref: this._onContainerLoad
      }, [this._renderButton('zoom-in', 'Zoom In', this._onZoomIn), this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut), this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())]);
    }
  }]);
  return NavigationControl;
}(_baseControl2.default);

exports.default = NavigationControl;


NavigationControl.displayName = 'NavigationControl';
NavigationControl.propTypes = propTypes;
NavigationControl.defaultProps = defaultProps;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24tY29udHJvbC5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJjbGFzc05hbWUiLCJzdHJpbmciLCJvblZpZXdwb3J0Q2hhbmdlIiwiZnVuYyIsImlzUmVxdWlyZWQiLCJkZWZhdWx0UHJvcHMiLCJOYXZpZ2F0aW9uQ29udHJvbCIsInByb3BzIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwibmV4dENvbnRleHQiLCJjb250ZXh0Iiwidmlld3BvcnQiLCJiZWFyaW5nIiwib3B0cyIsIm1hcFN0YXRlIiwib25DaGFuZ2VWaWV3cG9ydCIsImdldFZpZXdwb3J0UHJvcHMiLCJfdXBkYXRlVmlld3BvcnQiLCJ6b29tIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJ0eXBlIiwibGFiZWwiLCJjYWxsYmFjayIsImNoaWxkcmVuIiwia2V5IiwidGl0bGUiLCJvbkNsaWNrIiwicmVmIiwiX29uQ29udGFpbmVyTG9hZCIsIl9yZW5kZXJCdXR0b24iLCJfb25ab29tSW4iLCJfb25ab29tT3V0IiwiX29uUmVzZXROb3J0aCIsIl9yZW5kZXJDb21wYXNzIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBRUE7Ozs7OztBQUVBLElBQU1BLFlBQVksc0JBQWMsRUFBZCxFQUFrQixzQkFBWUEsU0FBOUIsRUFBeUM7QUFDekQ7QUFDQUMsYUFBVyxvQkFBVUMsTUFGb0M7QUFHekQ7Ozs7O0FBS0FDLG9CQUFrQixvQkFBVUMsSUFBVixDQUFlQztBQVJ3QixDQUF6QyxDQUFsQjs7QUFXQSxJQUFNQyxlQUFlLHNCQUFjLEVBQWQsRUFBa0Isc0JBQVlBLFlBQTlCLEVBQTRDO0FBQy9ETCxhQUFXLEVBRG9EO0FBRS9ERSxvQkFBa0IsNEJBQU0sQ0FBRTtBQUZxQyxDQUE1QyxDQUFyQjs7QUFLQTs7Ozs7SUFJcUJJLGlCOzs7QUFFbkIsNkJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQSw0SkFDWEEsS0FEVzs7QUFFakI7QUFDQTtBQUNBLGlDQUFjQSxLQUFkO0FBSmlCO0FBS2xCOzs7OzBDQUVxQkMsUyxFQUFXQyxTLEVBQVdDLFcsRUFBYTtBQUN2RCxhQUFPLEtBQUtDLE9BQUwsQ0FBYUMsUUFBYixDQUFzQkMsT0FBdEIsS0FBa0NILFlBQVlFLFFBQVosQ0FBcUJDLE9BQTlEO0FBQ0Q7OztvQ0FFZUMsSSxFQUFNO0FBQUEsVUFDYkYsUUFEYSxHQUNELEtBQUtELE9BREosQ0FDYkMsUUFEYTs7QUFFcEIsVUFBTUcsV0FBVyx1QkFBYSxzQkFBYyxFQUFkLEVBQWtCSCxRQUFsQixFQUE0QkUsSUFBNUIsQ0FBYixDQUFqQjtBQUNBO0FBQ0EsVUFBTVosbUJBQW1CLEtBQUtLLEtBQUwsQ0FBV1MsZ0JBQVgsSUFBK0IsS0FBS1QsS0FBTCxDQUFXTCxnQkFBbkU7QUFDQUEsdUJBQWlCYSxTQUFTRSxnQkFBVCxFQUFqQjtBQUNEOzs7Z0NBRVc7QUFDVixXQUFLQyxlQUFMLENBQXFCLEVBQUNDLE1BQU0sS0FBS1IsT0FBTCxDQUFhQyxRQUFiLENBQXNCTyxJQUF0QixHQUE2QixDQUFwQyxFQUFyQjtBQUNEOzs7aUNBRVk7QUFDWCxXQUFLRCxlQUFMLENBQXFCLEVBQUNDLE1BQU0sS0FBS1IsT0FBTCxDQUFhQyxRQUFiLENBQXNCTyxJQUF0QixHQUE2QixDQUFwQyxFQUFyQjtBQUNEOzs7b0NBRWU7QUFDZCxXQUFLRCxlQUFMLENBQXFCLEVBQUNMLFNBQVMsQ0FBVixFQUFyQjtBQUNEOzs7cUNBRWdCO0FBQUEsVUFDUkEsT0FEUSxHQUNHLEtBQUtGLE9BQUwsQ0FBYUMsUUFEaEIsQ0FDUkMsT0FEUTs7QUFFZixhQUFPLDBCQUFjLE1BQWQsRUFBc0I7QUFDM0JiLG1CQUFXLDZCQURnQjtBQUUzQm9CLGVBQU8sRUFBQ0MsdUJBQXFCUixPQUFyQixTQUFEO0FBRm9CLE9BQXRCLENBQVA7QUFJRDs7O2tDQUVhUyxJLEVBQU1DLEssRUFBT0MsUSxFQUFVQyxRLEVBQVU7QUFDN0MsYUFBTywwQkFBYyxRQUFkLEVBQXdCO0FBQzdCQyxhQUFLSixJQUR3QjtBQUU3QnRCLHlEQUErQ3NCLElBRmxCO0FBRzdCQSxjQUFNLFFBSHVCO0FBSTdCSyxlQUFPSixLQUpzQjtBQUs3QkssaUJBQVNKLFFBTG9CO0FBTTdCQztBQU42QixPQUF4QixDQUFQO0FBUUQ7Ozs2QkFFUTtBQUFBLFVBRUF6QixTQUZBLEdBRWEsS0FBS08sS0FGbEIsQ0FFQVAsU0FGQTs7O0FBSVAsYUFBTywwQkFBYyxLQUFkLEVBQXFCO0FBQzFCQSwwREFBZ0RBLFNBRHRCO0FBRTFCNkIsYUFBSyxLQUFLQztBQUZnQixPQUFyQixFQUdKLENBQ0QsS0FBS0MsYUFBTCxDQUFtQixTQUFuQixFQUE4QixTQUE5QixFQUF5QyxLQUFLQyxTQUE5QyxDQURDLEVBRUQsS0FBS0QsYUFBTCxDQUFtQixVQUFuQixFQUErQixVQUEvQixFQUEyQyxLQUFLRSxVQUFoRCxDQUZDLEVBR0QsS0FBS0YsYUFBTCxDQUFtQixTQUFuQixFQUE4QixhQUE5QixFQUE2QyxLQUFLRyxhQUFsRCxFQUFpRSxLQUFLQyxjQUFMLEVBQWpFLENBSEMsQ0FISSxDQUFQO0FBUUQ7Ozs7O2tCQWhFa0I3QixpQjs7O0FBbUVyQkEsa0JBQWtCOEIsV0FBbEIsR0FBZ0MsbUJBQWhDO0FBQ0E5QixrQkFBa0JQLFNBQWxCLEdBQThCQSxTQUE5QjtBQUNBTyxrQkFBa0JELFlBQWxCLEdBQWlDQSxZQUFqQyIsImZpbGUiOiJuYXZpZ2F0aW9uLWNvbnRyb2wuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUVsZW1lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQmFzZUNvbnRyb2wgZnJvbSAnLi9iYXNlLWNvbnRyb2wnO1xuaW1wb3J0IGF1dG9iaW5kIGZyb20gJy4uL3V0aWxzL2F1dG9iaW5kJztcblxuaW1wb3J0IE1hcFN0YXRlIGZyb20gJy4uL3V0aWxzL21hcC1zdGF0ZSc7XG5cbmltcG9ydCBkZXByZWNhdGVXYXJuIGZyb20gJy4uL3V0aWxzL2RlcHJlY2F0ZS13YXJuJztcblxuY29uc3QgcHJvcFR5cGVzID0gT2JqZWN0LmFzc2lnbih7fSwgQmFzZUNvbnRyb2wucHJvcFR5cGVzLCB7XG4gIC8vIEN1c3RvbSBjbGFzc05hbWVcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvKipcbiAgICAqIGBvblZpZXdwb3J0Q2hhbmdlYCBjYWxsYmFjayBpcyBmaXJlZCB3aGVuIHRoZSB1c2VyIGludGVyYWN0ZWQgd2l0aCB0aGVcbiAgICAqIG1hcC4gVGhlIG9iamVjdCBwYXNzZWQgdG8gdGhlIGNhbGxiYWNrIGNvbnRhaW5zIGBsYXRpdHVkZWAsXG4gICAgKiBgbG9uZ2l0dWRlYCBhbmQgYHpvb21gIGFuZCBhZGRpdGlvbmFsIHN0YXRlIGluZm9ybWF0aW9uLlxuICAgICovXG4gIG9uVmlld3BvcnRDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn0pO1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBCYXNlQ29udHJvbC5kZWZhdWx0UHJvcHMsIHtcbiAgY2xhc3NOYW1lOiAnJyxcbiAgb25WaWV3cG9ydENoYW5nZTogKCkgPT4ge31cbn0pO1xuXG4vKlxuICogUHVyZUNvbXBvbmVudCBkb2Vzbid0IHVwZGF0ZSB3aGVuIGNvbnRleHQgY2hhbmdlcywgc29cbiAqIGltcGxlbWVudGluZyBvdXIgb3duIHNob3VsZENvbXBvbmVudFVwZGF0ZSBoZXJlLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXZpZ2F0aW9uQ29udHJvbCBleHRlbmRzIEJhc2VDb250cm9sIHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICBhdXRvYmluZCh0aGlzKTtcbiAgICAvLyBDaGVjayBmb3IgZGVwcmVjYXRlZCBwcm9wc1xuICAgIGRlcHJlY2F0ZVdhcm4ocHJvcHMpO1xuICB9XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcywgbmV4dFN0YXRlLCBuZXh0Q29udGV4dCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQudmlld3BvcnQuYmVhcmluZyAhPT0gbmV4dENvbnRleHQudmlld3BvcnQuYmVhcmluZztcbiAgfVxuXG4gIF91cGRhdGVWaWV3cG9ydChvcHRzKSB7XG4gICAgY29uc3Qge3ZpZXdwb3J0fSA9IHRoaXMuY29udGV4dDtcbiAgICBjb25zdCBtYXBTdGF0ZSA9IG5ldyBNYXBTdGF0ZShPYmplY3QuYXNzaWduKHt9LCB2aWV3cG9ydCwgb3B0cykpO1xuICAgIC8vIFRPRE8oZGVwcmVjYXRlKTogcmVtb3ZlIHRoaXMgY2hlY2sgd2hlbiBgb25DaGFuZ2VWaWV3cG9ydGAgZ2V0cyBkZXByZWNhdGVkXG4gICAgY29uc3Qgb25WaWV3cG9ydENoYW5nZSA9IHRoaXMucHJvcHMub25DaGFuZ2VWaWV3cG9ydCB8fCB0aGlzLnByb3BzLm9uVmlld3BvcnRDaGFuZ2U7XG4gICAgb25WaWV3cG9ydENoYW5nZShtYXBTdGF0ZS5nZXRWaWV3cG9ydFByb3BzKCkpO1xuICB9XG5cbiAgX29uWm9vbUluKCkge1xuICAgIHRoaXMuX3VwZGF0ZVZpZXdwb3J0KHt6b29tOiB0aGlzLmNvbnRleHQudmlld3BvcnQuem9vbSArIDF9KTtcbiAgfVxuXG4gIF9vblpvb21PdXQoKSB7XG4gICAgdGhpcy5fdXBkYXRlVmlld3BvcnQoe3pvb206IHRoaXMuY29udGV4dC52aWV3cG9ydC56b29tIC0gMX0pO1xuICB9XG5cbiAgX29uUmVzZXROb3J0aCgpIHtcbiAgICB0aGlzLl91cGRhdGVWaWV3cG9ydCh7YmVhcmluZzogMH0pO1xuICB9XG5cbiAgX3JlbmRlckNvbXBhc3MoKSB7XG4gICAgY29uc3Qge2JlYXJpbmd9ID0gdGhpcy5jb250ZXh0LnZpZXdwb3J0O1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KCdzcGFuJywge1xuICAgICAgY2xhc3NOYW1lOiAnbWFwYm94Z2wtY3RybC1jb21wYXNzLWFycm93JyxcbiAgICAgIHN0eWxlOiB7dHJhbnNmb3JtOiBgcm90YXRlKCR7YmVhcmluZ31kZWcpYH1cbiAgICB9KTtcbiAgfVxuXG4gIF9yZW5kZXJCdXR0b24odHlwZSwgbGFiZWwsIGNhbGxiYWNrLCBjaGlsZHJlbikge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KCdidXR0b24nLCB7XG4gICAgICBrZXk6IHR5cGUsXG4gICAgICBjbGFzc05hbWU6IGBtYXBib3hnbC1jdHJsLWljb24gbWFwYm94Z2wtY3RybC0ke3R5cGV9YCxcbiAgICAgIHR5cGU6ICdidXR0b24nLFxuICAgICAgdGl0bGU6IGxhYmVsLFxuICAgICAgb25DbGljazogY2FsbGJhY2ssXG4gICAgICBjaGlsZHJlblxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuXG4gICAgY29uc3Qge2NsYXNzTmFtZX0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgIGNsYXNzTmFtZTogYG1hcGJveGdsLWN0cmwgbWFwYm94Z2wtY3RybC1ncm91cCAke2NsYXNzTmFtZX1gLFxuICAgICAgcmVmOiB0aGlzLl9vbkNvbnRhaW5lckxvYWRcbiAgICB9LCBbXG4gICAgICB0aGlzLl9yZW5kZXJCdXR0b24oJ3pvb20taW4nLCAnWm9vbSBJbicsIHRoaXMuX29uWm9vbUluKSxcbiAgICAgIHRoaXMuX3JlbmRlckJ1dHRvbignem9vbS1vdXQnLCAnWm9vbSBPdXQnLCB0aGlzLl9vblpvb21PdXQpLFxuICAgICAgdGhpcy5fcmVuZGVyQnV0dG9uKCdjb21wYXNzJywgJ1Jlc2V0IE5vcnRoJywgdGhpcy5fb25SZXNldE5vcnRoLCB0aGlzLl9yZW5kZXJDb21wYXNzKCkpXG4gICAgXSk7XG4gIH1cbn1cblxuTmF2aWdhdGlvbkNvbnRyb2wuZGlzcGxheU5hbWUgPSAnTmF2aWdhdGlvbkNvbnRyb2wnO1xuTmF2aWdhdGlvbkNvbnRyb2wucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuTmF2aWdhdGlvbkNvbnRyb2wuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuIl19