"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

exports.default = "#define SHADER_NAME extruded-choropleths-layer-vertex-shader\n\nattribute vec4 positions;\nattribute vec2 heights;\nattribute vec3 normals;\nattribute vec4 colors;\n\nuniform float opacity;\nuniform float elevation;\n\nuniform vec3 uAmbientColor;\nuniform float uPointLightAmbientCoefficient;\nuniform vec3 uPointLightLocation;\nuniform vec3 uPointLightColor;\nuniform float uPointLightAttenuation;\n\nuniform vec3 uMaterialSpecularColor;\nuniform float uMaterialShininess;\n\nvarying vec4 vColor;\n\nvec3 applyLighting(vec3 position_modelspace, vec3 normal_modelspace, vec3 color) {\n\n  vec3 pointLightLocation_modelspace = vec3(project_position(uPointLightLocation));\n  vec3 lightDirection = normalize(pointLightLocation_modelspace - position_modelspace);\n\n  vec3 ambient = uPointLightAmbientCoefficient * color / 255.0 * uAmbientColor / 255.0;\n\n  float diffuseCoefficient = max(dot(normal_modelspace, lightDirection), 0.0);\n  vec3 diffuse = diffuseCoefficient * uPointLightColor / 255. * color / 255.;\n\n  return ambient + uPointLightAttenuation * diffuse;\n}\n\nvoid main(void) {\n  vec2 projected_xy[2];\n  project_position_fp64(positions, projected_xy);\n  vec2 scaled_height = mul_fp64(heights, vec2(projectionPixelsPerUnit.x * elevation, 0.0));\n\n  vec2 vertex_pos_modelspace[4];\n  vertex_pos_modelspace[0] = projected_xy[0];\n  vertex_pos_modelspace[1] = projected_xy[1];\n  vertex_pos_modelspace[2] = sum_fp64(scaled_height, vec2(1.0, 0.0));\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec3 color = applyLighting(\n  \tvec3(\n  \t  vertex_pos_modelspace[0].x,\n  \t  vertex_pos_modelspace[1].x,\n  \t  vertex_pos_modelspace[2].x),\n  \tnormals,\n  \tcolors.rgb\n  );\n  vColor = vec4(color, opacity);\n}\n";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZGVwcmVjYXRlZC9leHRydWRlZC1jaG9yb3BsZXRoLWxheWVyLTY0L2V4dHJ1ZGVkLWNob3JvcGxldGgtbGF5ZXItdmVydGV4Lmdsc2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJleHRydWRlZC1jaG9yb3BsZXRoLWxheWVyLXZlcnRleC5nbHNsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmV4cG9ydCBkZWZhdWx0IGBcXFxuI2RlZmluZSBTSEFERVJfTkFNRSBleHRydWRlZC1jaG9yb3BsZXRocy1sYXllci12ZXJ0ZXgtc2hhZGVyXG5cbmF0dHJpYnV0ZSB2ZWM0IHBvc2l0aW9ucztcbmF0dHJpYnV0ZSB2ZWMyIGhlaWdodHM7XG5hdHRyaWJ1dGUgdmVjMyBub3JtYWxzO1xuYXR0cmlidXRlIHZlYzQgY29sb3JzO1xuXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XG51bmlmb3JtIGZsb2F0IGVsZXZhdGlvbjtcblxudW5pZm9ybSB2ZWMzIHVBbWJpZW50Q29sb3I7XG51bmlmb3JtIGZsb2F0IHVQb2ludExpZ2h0QW1iaWVudENvZWZmaWNpZW50O1xudW5pZm9ybSB2ZWMzIHVQb2ludExpZ2h0TG9jYXRpb247XG51bmlmb3JtIHZlYzMgdVBvaW50TGlnaHRDb2xvcjtcbnVuaWZvcm0gZmxvYXQgdVBvaW50TGlnaHRBdHRlbnVhdGlvbjtcblxudW5pZm9ybSB2ZWMzIHVNYXRlcmlhbFNwZWN1bGFyQ29sb3I7XG51bmlmb3JtIGZsb2F0IHVNYXRlcmlhbFNoaW5pbmVzcztcblxudmFyeWluZyB2ZWM0IHZDb2xvcjtcblxudmVjMyBhcHBseUxpZ2h0aW5nKHZlYzMgcG9zaXRpb25fbW9kZWxzcGFjZSwgdmVjMyBub3JtYWxfbW9kZWxzcGFjZSwgdmVjMyBjb2xvcikge1xuXG4gIHZlYzMgcG9pbnRMaWdodExvY2F0aW9uX21vZGVsc3BhY2UgPSB2ZWMzKHByb2plY3RfcG9zaXRpb24odVBvaW50TGlnaHRMb2NhdGlvbikpO1xuICB2ZWMzIGxpZ2h0RGlyZWN0aW9uID0gbm9ybWFsaXplKHBvaW50TGlnaHRMb2NhdGlvbl9tb2RlbHNwYWNlIC0gcG9zaXRpb25fbW9kZWxzcGFjZSk7XG5cbiAgdmVjMyBhbWJpZW50ID0gdVBvaW50TGlnaHRBbWJpZW50Q29lZmZpY2llbnQgKiBjb2xvciAvIDI1NS4wICogdUFtYmllbnRDb2xvciAvIDI1NS4wO1xuXG4gIGZsb2F0IGRpZmZ1c2VDb2VmZmljaWVudCA9IG1heChkb3Qobm9ybWFsX21vZGVsc3BhY2UsIGxpZ2h0RGlyZWN0aW9uKSwgMC4wKTtcbiAgdmVjMyBkaWZmdXNlID0gZGlmZnVzZUNvZWZmaWNpZW50ICogdVBvaW50TGlnaHRDb2xvciAvIDI1NS4gKiBjb2xvciAvIDI1NS47XG5cbiAgcmV0dXJuIGFtYmllbnQgKyB1UG9pbnRMaWdodEF0dGVudWF0aW9uICogZGlmZnVzZTtcbn1cblxudm9pZCBtYWluKHZvaWQpIHtcbiAgdmVjMiBwcm9qZWN0ZWRfeHlbMl07XG4gIHByb2plY3RfcG9zaXRpb25fZnA2NChwb3NpdGlvbnMsIHByb2plY3RlZF94eSk7XG4gIHZlYzIgc2NhbGVkX2hlaWdodCA9IG11bF9mcDY0KGhlaWdodHMsIHZlYzIocHJvamVjdGlvblBpeGVsc1BlclVuaXQueCAqIGVsZXZhdGlvbiwgMC4wKSk7XG5cbiAgdmVjMiB2ZXJ0ZXhfcG9zX21vZGVsc3BhY2VbNF07XG4gIHZlcnRleF9wb3NfbW9kZWxzcGFjZVswXSA9IHByb2plY3RlZF94eVswXTtcbiAgdmVydGV4X3Bvc19tb2RlbHNwYWNlWzFdID0gcHJvamVjdGVkX3h5WzFdO1xuICB2ZXJ0ZXhfcG9zX21vZGVsc3BhY2VbMl0gPSBzdW1fZnA2NChzY2FsZWRfaGVpZ2h0LCB2ZWMyKDEuMCwgMC4wKSk7XG4gIHZlcnRleF9wb3NfbW9kZWxzcGFjZVszXSA9IHZlYzIoMS4wLCAwLjApO1xuXG4gIGdsX1Bvc2l0aW9uID0gcHJvamVjdF90b19jbGlwc3BhY2VfZnA2NCh2ZXJ0ZXhfcG9zX21vZGVsc3BhY2UpO1xuXG4gIHZlYzMgY29sb3IgPSBhcHBseUxpZ2h0aW5nKFxuICBcdHZlYzMoXG4gIFx0ICB2ZXJ0ZXhfcG9zX21vZGVsc3BhY2VbMF0ueCxcbiAgXHQgIHZlcnRleF9wb3NfbW9kZWxzcGFjZVsxXS54LFxuICBcdCAgdmVydGV4X3Bvc19tb2RlbHNwYWNlWzJdLngpLFxuICBcdG5vcm1hbHMsXG4gIFx0Y29sb3JzLnJnYlxuICApO1xuICB2Q29sb3IgPSB2ZWM0KGNvbG9yLCBvcGFjaXR5KTtcbn1cbmA7XG4iXX0=