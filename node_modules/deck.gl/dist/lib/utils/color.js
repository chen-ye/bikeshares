'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseColor = parseColor;
exports.parseHexColor = parseHexColor;
exports.setOpacity = setOpacity;
exports.applyOpacity = applyOpacity;
// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Parse array or string color
function parseColor(color) {
  if (Array.isArray(color)) {
    if (color.length === 3) {
      return [color[0], color[1], color[2], 255];
    }
    return color;
  }
  if (typeof color === 'string') {
    return parseHexColor(color);
  }
  return null;
}

// Parse a hex color
function parseHexColor(color) {
  var array = new Uint8ClampedArray(4);
  if (color.length === 7) {
    var value = parseInt(color.substring(1), 16);
    array[0] = value / 65536;
    array[1] = value / 256 % 256;
    array[2] = value % 256;
    array[3] = 255;
  } else if (color.length === 9) {
    var _value = parseInt(color.substring(1), 16);
    array[0] = _value / 16777216;
    array[1] = _value / 65536 % 256;
    array[2] = _value / 256 % 256;
    array[3] = _value % 256;
  }
  return array;
}

function setOpacity(color) {
  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;

  return [color[0], color[1], color[2], opacity];
}

function applyOpacity(color) {
  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;

  return [color[0], color[1], color[2], opacity];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvY29sb3IuanMiXSwibmFtZXMiOlsicGFyc2VDb2xvciIsInBhcnNlSGV4Q29sb3IiLCJzZXRPcGFjaXR5IiwiYXBwbHlPcGFjaXR5IiwiY29sb3IiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJhcnJheSIsIlVpbnQ4Q2xhbXBlZEFycmF5IiwidmFsdWUiLCJwYXJzZUludCIsInN1YnN0cmluZyIsIm9wYWNpdHkiXSwibWFwcGluZ3MiOiI7Ozs7O1FBcUJnQkEsVSxHQUFBQSxVO1FBY0FDLGEsR0FBQUEsYTtRQWtCQUMsVSxHQUFBQSxVO1FBSUFDLFksR0FBQUEsWTtBQXpEaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDTyxTQUFTSCxVQUFULENBQW9CSSxLQUFwQixFQUEyQjtBQUNoQyxNQUFJQyxNQUFNQyxPQUFOLENBQWNGLEtBQWQsQ0FBSixFQUEwQjtBQUN4QixRQUFJQSxNQUFNRyxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQ3RCLGFBQU8sQ0FBQ0gsTUFBTSxDQUFOLENBQUQsRUFBV0EsTUFBTSxDQUFOLENBQVgsRUFBcUJBLE1BQU0sQ0FBTixDQUFyQixFQUErQixHQUEvQixDQUFQO0FBQ0Q7QUFDRCxXQUFPQSxLQUFQO0FBQ0Q7QUFDRCxNQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsV0FBT0gsY0FBY0csS0FBZCxDQUFQO0FBQ0Q7QUFDRCxTQUFPLElBQVA7QUFDRDs7QUFFRDtBQUNPLFNBQVNILGFBQVQsQ0FBdUJHLEtBQXZCLEVBQThCO0FBQ25DLE1BQU1JLFFBQVEsSUFBSUMsaUJBQUosQ0FBc0IsQ0FBdEIsQ0FBZDtBQUNBLE1BQUlMLE1BQU1HLE1BQU4sS0FBaUIsQ0FBckIsRUFBd0I7QUFDdEIsUUFBTUcsUUFBUUMsU0FBU1AsTUFBTVEsU0FBTixDQUFnQixDQUFoQixDQUFULEVBQTZCLEVBQTdCLENBQWQ7QUFDQUosVUFBTSxDQUFOLElBQVdFLFFBQVEsS0FBbkI7QUFDQUYsVUFBTSxDQUFOLElBQVlFLFFBQVEsR0FBVCxHQUFnQixHQUEzQjtBQUNBRixVQUFNLENBQU4sSUFBV0UsUUFBUSxHQUFuQjtBQUNBRixVQUFNLENBQU4sSUFBVyxHQUFYO0FBQ0QsR0FORCxNQU1PLElBQUlKLE1BQU1HLE1BQU4sS0FBaUIsQ0FBckIsRUFBd0I7QUFDN0IsUUFBTUcsU0FBUUMsU0FBU1AsTUFBTVEsU0FBTixDQUFnQixDQUFoQixDQUFULEVBQTZCLEVBQTdCLENBQWQ7QUFDQUosVUFBTSxDQUFOLElBQVdFLFNBQVEsUUFBbkI7QUFDQUYsVUFBTSxDQUFOLElBQVlFLFNBQVEsS0FBVCxHQUFrQixHQUE3QjtBQUNBRixVQUFNLENBQU4sSUFBWUUsU0FBUSxHQUFULEdBQWdCLEdBQTNCO0FBQ0FGLFVBQU0sQ0FBTixJQUFXRSxTQUFRLEdBQW5CO0FBQ0Q7QUFDRCxTQUFPRixLQUFQO0FBQ0Q7O0FBRU0sU0FBU04sVUFBVCxDQUFvQkUsS0FBcEIsRUFBMEM7QUFBQSxNQUFmUyxPQUFlLHVFQUFMLEdBQUs7O0FBQy9DLFNBQU8sQ0FBQ1QsTUFBTSxDQUFOLENBQUQsRUFBV0EsTUFBTSxDQUFOLENBQVgsRUFBcUJBLE1BQU0sQ0FBTixDQUFyQixFQUErQlMsT0FBL0IsQ0FBUDtBQUNEOztBQUVNLFNBQVNWLFlBQVQsQ0FBc0JDLEtBQXRCLEVBQTRDO0FBQUEsTUFBZlMsT0FBZSx1RUFBTCxHQUFLOztBQUNqRCxTQUFPLENBQUNULE1BQU0sQ0FBTixDQUFELEVBQVdBLE1BQU0sQ0FBTixDQUFYLEVBQXFCQSxNQUFNLENBQU4sQ0FBckIsRUFBK0JTLE9BQS9CLENBQVA7QUFDRCIsImZpbGUiOiJjb2xvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vLyBQYXJzZSBhcnJheSBvciBzdHJpbmcgY29sb3JcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbG9yKGNvbG9yKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNvbG9yKSkge1xuICAgIGlmIChjb2xvci5sZW5ndGggPT09IDMpIHtcbiAgICAgIHJldHVybiBbY29sb3JbMF0sIGNvbG9yWzFdLCBjb2xvclsyXSwgMjU1XTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG4gIGlmICh0eXBlb2YgY29sb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHBhcnNlSGV4Q29sb3IoY29sb3IpO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG4vLyBQYXJzZSBhIGhleCBjb2xvclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSGV4Q29sb3IoY29sb3IpIHtcbiAgY29uc3QgYXJyYXkgPSBuZXcgVWludDhDbGFtcGVkQXJyYXkoNCk7XG4gIGlmIChjb2xvci5sZW5ndGggPT09IDcpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZygxKSwgMTYpO1xuICAgIGFycmF5WzBdID0gdmFsdWUgLyA2NTUzNjtcbiAgICBhcnJheVsxXSA9ICh2YWx1ZSAvIDI1NikgJSAyNTY7XG4gICAgYXJyYXlbMl0gPSB2YWx1ZSAlIDI1NjtcbiAgICBhcnJheVszXSA9IDI1NTtcbiAgfSBlbHNlIGlmIChjb2xvci5sZW5ndGggPT09IDkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZygxKSwgMTYpO1xuICAgIGFycmF5WzBdID0gdmFsdWUgLyAxNjc3NzIxNjtcbiAgICBhcnJheVsxXSA9ICh2YWx1ZSAvIDY1NTM2KSAlIDI1NjtcbiAgICBhcnJheVsyXSA9ICh2YWx1ZSAvIDI1NikgJSAyNTY7XG4gICAgYXJyYXlbM10gPSB2YWx1ZSAlIDI1NjtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRPcGFjaXR5KGNvbG9yLCBvcGFjaXR5ID0gMTI3KSB7XG4gIHJldHVybiBbY29sb3JbMF0sIGNvbG9yWzFdLCBjb2xvclsyXSwgb3BhY2l0eV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBseU9wYWNpdHkoY29sb3IsIG9wYWNpdHkgPSAxMjcpIHtcbiAgcmV0dXJuIFtjb2xvclswXSwgY29sb3JbMV0sIGNvbG9yWzJdLCBvcGFjaXR5XTtcbn1cblxuIl19