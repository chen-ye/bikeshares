var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

import Layer from './layer';
import { log } from './utils';

var CompositeLayer = function (_Layer) {
  _inherits(CompositeLayer, _Layer);

  function CompositeLayer(props) {
    _classCallCheck(this, CompositeLayer);

    return _possibleConstructorReturn(this, (CompositeLayer.__proto__ || Object.getPrototypeOf(CompositeLayer)).call(this, props));
  }

  _createClass(CompositeLayer, [{
    key: 'initializeState',


    // initializeState is usually not needed for composite layers
    // Provide empty definition to disable check for missing definition
    value: function initializeState() {}

    // No-op for the invalidateAttribute function as the composite
    // layer has no AttributeManager

  }, {
    key: 'invalidateAttribute',
    value: function invalidateAttribute() {}

    // called to augment the info object that is bubbled up from a sublayer
    // override Layer.getPickingInfo() because decoding / setting uniform do
    // not apply to a composite layer.
    // @return null to cancel event

  }, {
    key: 'getPickingInfo',
    value: function getPickingInfo(_ref) {
      var info = _ref.info;

      return info;
    }

    // Implement to generate sublayers

  }, {
    key: 'renderLayers',
    value: function renderLayers() {
      return null;
    }

    // Returns props that should be forwarded to children
    // TODO - implement autoforwarding?

  }, {
    key: 'getForwardProps',
    value: function getForwardProps() {
      var _props = this.props,
          opacity = _props.opacity,
          pickable = _props.pickable,
          visible = _props.visible,
          parameters = _props.parameters,
          getPolygonOffset = _props.getPolygonOffset,
          highlightedObjectIndex = _props.highlightedObjectIndex,
          autoHighlight = _props.autoHighlight,
          highlightColor = _props.highlightColor,
          coordinateSystem = _props.coordinateSystem,
          coordinateOrigin = _props.coordinateOrigin,
          modelMatrix = _props.modelMatrix;


      return {
        // Forward layer props
        opacity: opacity, pickable: pickable, visible: visible, parameters: parameters, getPolygonOffset: getPolygonOffset,
        highlightedObjectIndex: highlightedObjectIndex, autoHighlight: autoHighlight, highlightColor: highlightColor,
        coordinateSystem: coordinateSystem, coordinateOrigin: coordinateOrigin, modelMatrix: modelMatrix
      };
    }
  }, {
    key: '_renderLayers',
    value: function _renderLayers(updateParams) {
      if (!this.shouldUpdateState(updateParams)) {
        log.log(2, 'Composite layer reusing sublayers', this.state.oldSubLayers);
        return this.state.oldSubLayers;
      }
      var subLayers = this.renderLayers();
      this.state.oldSubLayers = subLayers;
      log.log(2, 'Composite layer saving sublayers', this.state.oldSubLayers);
      return subLayers;
    }
  }, {
    key: 'isComposite',
    get: function get() {
      return true;
    }
  }]);

  return CompositeLayer;
}(Layer);

export default CompositeLayer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvY29tcG9zaXRlLWxheWVyLmpzIl0sIm5hbWVzIjpbIkxheWVyIiwibG9nIiwiQ29tcG9zaXRlTGF5ZXIiLCJwcm9wcyIsImluZm8iLCJvcGFjaXR5IiwicGlja2FibGUiLCJ2aXNpYmxlIiwicGFyYW1ldGVycyIsImdldFBvbHlnb25PZmZzZXQiLCJoaWdobGlnaHRlZE9iamVjdEluZGV4IiwiYXV0b0hpZ2hsaWdodCIsImhpZ2hsaWdodENvbG9yIiwiY29vcmRpbmF0ZVN5c3RlbSIsImNvb3JkaW5hdGVPcmlnaW4iLCJtb2RlbE1hdHJpeCIsInVwZGF0ZVBhcmFtcyIsInNob3VsZFVwZGF0ZVN0YXRlIiwic3RhdGUiLCJvbGRTdWJMYXllcnMiLCJzdWJMYXllcnMiLCJyZW5kZXJMYXllcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBUCxNQUFrQixTQUFsQjtBQUNBLFNBQVFDLEdBQVIsUUFBa0IsU0FBbEI7O0lBRXFCQyxjOzs7QUFDbkIsMEJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQSwySEFDWEEsS0FEVztBQUVsQjs7Ozs7O0FBTUQ7QUFDQTtzQ0FDa0IsQ0FDakI7O0FBRUQ7QUFDQTs7OzswQ0FDc0IsQ0FDckI7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7Ozs7eUNBQ3VCO0FBQUEsVUFBUEMsSUFBTyxRQUFQQSxJQUFPOztBQUNyQixhQUFPQSxJQUFQO0FBQ0Q7O0FBRUQ7Ozs7bUNBQ2U7QUFDYixhQUFPLElBQVA7QUFDRDs7QUFFRDtBQUNBOzs7O3NDQUNrQjtBQUFBLG1CQU9aLEtBQUtELEtBUE87QUFBQSxVQUdkRSxPQUhjLFVBR2RBLE9BSGM7QUFBQSxVQUdMQyxRQUhLLFVBR0xBLFFBSEs7QUFBQSxVQUdLQyxPQUhMLFVBR0tBLE9BSEw7QUFBQSxVQUdjQyxVQUhkLFVBR2NBLFVBSGQ7QUFBQSxVQUcwQkMsZ0JBSDFCLFVBRzBCQSxnQkFIMUI7QUFBQSxVQUlkQyxzQkFKYyxVQUlkQSxzQkFKYztBQUFBLFVBSVVDLGFBSlYsVUFJVUEsYUFKVjtBQUFBLFVBSXlCQyxjQUp6QixVQUl5QkEsY0FKekI7QUFBQSxVQU1kQyxnQkFOYyxVQU1kQSxnQkFOYztBQUFBLFVBTUlDLGdCQU5KLFVBTUlBLGdCQU5KO0FBQUEsVUFNc0JDLFdBTnRCLFVBTXNCQSxXQU50Qjs7O0FBU2hCLGFBQU87QUFDTDtBQUNBVix3QkFGSyxFQUVJQyxrQkFGSixFQUVjQyxnQkFGZCxFQUV1QkMsc0JBRnZCLEVBRW1DQyxrQ0FGbkM7QUFHTEMsc0RBSEssRUFHbUJDLDRCQUhuQixFQUdrQ0MsOEJBSGxDO0FBSUxDLDBDQUpLLEVBSWFDLGtDQUpiLEVBSStCQztBQUovQixPQUFQO0FBTUQ7OztrQ0FFYUMsWSxFQUFjO0FBQzFCLFVBQUksQ0FBQyxLQUFLQyxpQkFBTCxDQUF1QkQsWUFBdkIsQ0FBTCxFQUEyQztBQUN6Q2YsWUFBSUEsR0FBSixDQUFRLENBQVIsRUFBVyxtQ0FBWCxFQUFnRCxLQUFLaUIsS0FBTCxDQUFXQyxZQUEzRDtBQUNBLGVBQU8sS0FBS0QsS0FBTCxDQUFXQyxZQUFsQjtBQUNEO0FBQ0QsVUFBTUMsWUFBWSxLQUFLQyxZQUFMLEVBQWxCO0FBQ0EsV0FBS0gsS0FBTCxDQUFXQyxZQUFYLEdBQTBCQyxTQUExQjtBQUNBbkIsVUFBSUEsR0FBSixDQUFRLENBQVIsRUFBVyxrQ0FBWCxFQUErQyxLQUFLaUIsS0FBTCxDQUFXQyxZQUExRDtBQUNBLGFBQU9DLFNBQVA7QUFDRDs7O3dCQXZEaUI7QUFDaEIsYUFBTyxJQUFQO0FBQ0Q7Ozs7RUFQeUNwQixLOztlQUF2QkUsYyIsImZpbGUiOiJjb21wb3NpdGUtbGF5ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IExheWVyIGZyb20gJy4vbGF5ZXInO1xuaW1wb3J0IHtsb2d9IGZyb20gJy4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wb3NpdGVMYXllciBleHRlbmRzIExheWVyIHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICBnZXQgaXNDb21wb3NpdGUoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyBpbml0aWFsaXplU3RhdGUgaXMgdXN1YWxseSBub3QgbmVlZGVkIGZvciBjb21wb3NpdGUgbGF5ZXJzXG4gIC8vIFByb3ZpZGUgZW1wdHkgZGVmaW5pdGlvbiB0byBkaXNhYmxlIGNoZWNrIGZvciBtaXNzaW5nIGRlZmluaXRpb25cbiAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICB9XG5cbiAgLy8gTm8tb3AgZm9yIHRoZSBpbnZhbGlkYXRlQXR0cmlidXRlIGZ1bmN0aW9uIGFzIHRoZSBjb21wb3NpdGVcbiAgLy8gbGF5ZXIgaGFzIG5vIEF0dHJpYnV0ZU1hbmFnZXJcbiAgaW52YWxpZGF0ZUF0dHJpYnV0ZSgpIHtcbiAgfVxuXG4gIC8vIGNhbGxlZCB0byBhdWdtZW50IHRoZSBpbmZvIG9iamVjdCB0aGF0IGlzIGJ1YmJsZWQgdXAgZnJvbSBhIHN1YmxheWVyXG4gIC8vIG92ZXJyaWRlIExheWVyLmdldFBpY2tpbmdJbmZvKCkgYmVjYXVzZSBkZWNvZGluZyAvIHNldHRpbmcgdW5pZm9ybSBkb1xuICAvLyBub3QgYXBwbHkgdG8gYSBjb21wb3NpdGUgbGF5ZXIuXG4gIC8vIEByZXR1cm4gbnVsbCB0byBjYW5jZWwgZXZlbnRcbiAgZ2V0UGlja2luZ0luZm8oe2luZm99KSB7XG4gICAgcmV0dXJuIGluZm87XG4gIH1cblxuICAvLyBJbXBsZW1lbnQgdG8gZ2VuZXJhdGUgc3VibGF5ZXJzXG4gIHJlbmRlckxheWVycygpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8vIFJldHVybnMgcHJvcHMgdGhhdCBzaG91bGQgYmUgZm9yd2FyZGVkIHRvIGNoaWxkcmVuXG4gIC8vIFRPRE8gLSBpbXBsZW1lbnQgYXV0b2ZvcndhcmRpbmc/XG4gIGdldEZvcndhcmRQcm9wcygpIHtcbiAgICBjb25zdCB7XG4gICAgICAvLyBiYXNlIGxheWVyIHByb3BzXG4gICAgICBvcGFjaXR5LCBwaWNrYWJsZSwgdmlzaWJsZSwgcGFyYW1ldGVycywgZ2V0UG9seWdvbk9mZnNldCxcbiAgICAgIGhpZ2hsaWdodGVkT2JqZWN0SW5kZXgsIGF1dG9IaWdobGlnaHQsIGhpZ2hsaWdodENvbG9yLFxuICAgICAgLy8gdmlld3BvcnQgcHJvcHNcbiAgICAgIGNvb3JkaW5hdGVTeXN0ZW0sIGNvb3JkaW5hdGVPcmlnaW4sIG1vZGVsTWF0cml4XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgLy8gRm9yd2FyZCBsYXllciBwcm9wc1xuICAgICAgb3BhY2l0eSwgcGlja2FibGUsIHZpc2libGUsIHBhcmFtZXRlcnMsIGdldFBvbHlnb25PZmZzZXQsXG4gICAgICBoaWdobGlnaHRlZE9iamVjdEluZGV4LCBhdXRvSGlnaGxpZ2h0LCBoaWdobGlnaHRDb2xvcixcbiAgICAgIGNvb3JkaW5hdGVTeXN0ZW0sIGNvb3JkaW5hdGVPcmlnaW4sIG1vZGVsTWF0cml4XG4gICAgfTtcbiAgfVxuXG4gIF9yZW5kZXJMYXllcnModXBkYXRlUGFyYW1zKSB7XG4gICAgaWYgKCF0aGlzLnNob3VsZFVwZGF0ZVN0YXRlKHVwZGF0ZVBhcmFtcykpIHtcbiAgICAgIGxvZy5sb2coMiwgJ0NvbXBvc2l0ZSBsYXllciByZXVzaW5nIHN1YmxheWVycycsIHRoaXMuc3RhdGUub2xkU3ViTGF5ZXJzKTtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLm9sZFN1YkxheWVycztcbiAgICB9XG4gICAgY29uc3Qgc3ViTGF5ZXJzID0gdGhpcy5yZW5kZXJMYXllcnMoKTtcbiAgICB0aGlzLnN0YXRlLm9sZFN1YkxheWVycyA9IHN1YkxheWVycztcbiAgICBsb2cubG9nKDIsICdDb21wb3NpdGUgbGF5ZXIgc2F2aW5nIHN1YmxheWVycycsIHRoaXMuc3RhdGUub2xkU3ViTGF5ZXJzKTtcbiAgICByZXR1cm4gc3ViTGF5ZXJzO1xuICB9XG59XG4iXX0=