{"version":3,"sources":["../../../../src/packages/math/src/matrix4.js"],"names":["validateMatrix4","IDENTITY","m","length","Number","isFinite","Matrix4","args","Array","isArray","arguments","copy","identity","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","set","check","i","q","left","right","bottom","top","near","far","eye","center","up","fov","Math","PI","aspect","Error","a","radians","rx","ry","rz","rotateX","rotateY","rotateZ","axis","vec","vector","out","transformVector2","transformVector3","transformVector4","value"],"mappings":"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","file":"matrix4.js","sourcesContent":["import MathArray from './math-array';\nimport {checkNumber} from './common';\nimport Vector2, {validateVector2} from './vector2';\nimport Vector3, {validateVector3} from './vector3';\nimport Vector4, {validateVector4} from './vector4';\nimport assert from 'assert';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport mat4_determinant from 'gl-mat4/determinant';\nimport mat4_fromQuat from 'gl-mat4/fromQuat';\nimport mat4_frustum from 'gl-mat4/frustum';\nimport mat4_lookAt from 'gl-mat4/lookAt';\nimport mat4_ortho from 'gl-mat4/ortho';\nimport mat4_perspective from 'gl-mat4/perspective';\nimport mat4_transpose from 'gl-mat4/transpose';\nimport mat4_invert from 'gl-mat4/invert';\nimport mat4_multiply from 'gl-mat4/multiply';\nimport mat4_rotateX from 'gl-mat4/rotateX';\nimport mat4_rotateY from 'gl-mat4/rotateY';\nimport mat4_rotateZ from 'gl-mat4/rotateZ';\nimport mat4_rotate from 'gl-mat4/rotateZ';\nimport mat4_scale from 'gl-mat4/scale';\nimport mat4_translate from 'gl-mat4/translate';\nimport vec2_transformMat4 from 'gl-vec2/transformMat4';\nimport vec3_transformMat4 from 'gl-vec3/transformMat4';\nimport vec4_transformMat4 from 'gl-vec4/transformMat4';\n\nconst IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nexport function validateMatrix4(m) {\n  return m.length === 16 &&\n    Number.isFinite(m[0]) && Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) && Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) && Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) && Number.isFinite(m[7]) &&\n    Number.isFinite(m[8]) && Number.isFinite(m[9]) &&\n    Number.isFinite(m[10]) && Number.isFinite(m[11]) &&\n    Number.isFinite(m[12]) && Number.isFinite(m[13]) &&\n    Number.isFinite(m[14]) && Number.isFinite(m[15]);\n}\n\nexport default class Matrix4 extends MathArray {\n  constructor(...args) {\n    super();\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  /* eslint-disable max-params */\n  setRowMajor(\n    m00 = 1, m10 = 0, m20 = 0, m30 = 0,\n    m01 = 0, m11 = 1, m21 = 0, m31 = 0,\n    m02 = 0, m12 = 0, m22 = 1, m32 = 0,\n    m03 = 0, m13 = 0, m23 = 0, m33 = 1\n  ) {\n    return this.set(\n      m00, m01, m02, m03,\n      m10, m11, m12, m13,\n      m20, m21, m22, m23,\n      m30, m31, m32, m33\n    );\n  }\n\n  setColumnMajor(\n    m00 = 1, m01 = 0, m02 = 0, m03 = 0,\n    m10 = 0, m11 = 1, m12 = 0, m13 = 0,\n    m20 = 0, m21 = 0, m22 = 1, m23 = 0,\n    m30 = 0, m31 = 0, m32 = 0, m33 = 1\n  ) {\n    return this.set(\n      m00, m01, m02, m03,\n      m10, m11, m12, m13,\n      m20, m21, m22, m23,\n      m30, m31, m32, m33\n    );\n  }\n\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m01;\n    this[2] = m02;\n    this[3] = m03;\n    this[4] = m10;\n    this[5] = m11;\n    this[6] = m12;\n    this[7] = m13;\n    this[8] = m20;\n    this[9] = m21;\n    this[10] = m22;\n    this[11] = m23;\n    this[12] = m30;\n    this[13] = m31;\n    this[14] = m32;\n    this[15] = m33;\n    this.check();\n    return this;\n  }\n  /* eslint-enable max-params */\n\n  // toString() {\n  //   if (config.printRowMajor) {\n  //     mat4_str(this);\n  //   } else {\n  //     mat4_str(this);\n  //   }\n  // }\n\n  // Row major setters and getters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get m00()      { return this[0]; }\n  set m00(value) { return this[0] = checkNumber(value); }\n  get m01()      { return this[4]; }\n  set m01(value) { return this[4] = checkNumber(value); }\n  get m02()      { return this[8]; }\n  set m02(value) { return this[8] = checkNumber(value); }\n  get m03()      { return this[12]; }\n  set m03(value) { return this[12] = checkNumber(value); }\n  get m10()      { return this[1]; }\n  set m10(value) { return this[1] = checkNumber(value); }\n  get m11()      { return this[5]; }\n  set m11(value) { return this[5] = checkNumber(value); }\n  get m12()      { return this[9]; }\n  set m12(value) { return this[9] = checkNumber(value); }\n  get m13()      { return this[13]; }\n  set m13(value) { return this[13] = checkNumber(value); }\n  get m20()      { return this[2]; }\n  set m20(value) { return this[2] = checkNumber(value); }\n  get m21()      { return this[6]; }\n  set m21(value) { return this[6] = checkNumber(value); }\n  get m22()      { return this[10]; }\n  set m22(value) { return this[10] = checkNumber(value); }\n  get m23()      { return this[14]; }\n  set m23(value) { return this[14] = checkNumber(value); }\n  get m30()      { return this[3]; }\n  set m30(value) { return this[3] = checkNumber(value); }\n  get m31()      { return this[7]; }\n  set m31(value) { return this[7] = checkNumber(value); }\n  get m32()      { return this[11]; }\n  set m32(value) { return this[11] = checkNumber(value); }\n  get m33()      { return this[15]; }\n  set m33(value) { return this[15] = checkNumber(value); }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // Accessors\n\n  determinant() {\n    return mat4_determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    for (let i = 0; i < IDENTITY.length; ++i) {\n      this[i] = IDENTITY[i];\n    }\n    this.check();\n    return this;\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4_fromQuat(this, q);\n    this.check();\n    return this;\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    mat4_frustum(this, left, right, bottom, top, near, far);\n    this.check();\n    return this;\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt({\n    eye,\n    center = [0, 0, 0],\n    up = [0, 1, 0]\n  } = {}) {\n    mat4_lookAt(this, eye, center, up);\n    this.check();\n    return this;\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4_ortho(this, left, right, bottom, top, near, far);\n    this.check();\n    return this;\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fov = 45 * Math.PI / 180,\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    if (fov > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4_perspective(this, fov, aspect, near, far);\n    this.check();\n    return this;\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4_transpose(this, this);\n    this.check();\n    return this;\n  }\n\n  invert() {\n    mat4_invert(this, this);\n    this.check();\n    return this;\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4_multiply(this, a, this);\n    this.check();\n    return this;\n  }\n\n  multiplyRight(a) {\n    mat4_multiply(this, this, a);\n    this.check();\n    return this;\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4_rotateX(this, this, radians);\n    this.check();\n    return this;\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4_rotateY(this, this, radians);\n    this.check();\n    return this;\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4_rotateZ(this, this, radians);\n    this.check();\n    return this;\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4_rotate(this, this, radians, axis);\n    this.check();\n    return this;\n  }\n\n  scale(vec) {\n    mat4_scale(this, this, vec);\n    this.check();\n    return this;\n  }\n\n  translate(vec) {\n    mat4_translate(this, this, vec);\n    this.check();\n    return this;\n  }\n\n  transformVector2(vector, out) {\n    out = out || new Vector2();\n    vec2_transformMat4(out, vector, this);\n    assert(validateVector2(out));\n    return out;\n  }\n\n  transformVector3(vector, out = new Vector3()) {\n    out = out || new Vector3();\n    vec3_transformMat4(out, vector, this);\n    assert(validateVector3(out));\n    return out;\n  }\n\n  transformVector4(vector, out = new Vector4()) {\n    out = out || new Vector4();\n    vec4_transformMat4(out, vector, this);\n    assert(validateVector4(out));\n    return out;\n  }\n\n  // Transforms any 2, 3 or 4 element vector\n  // returns a newly minted Vector2, Vector3 or Vector4\n  transformVector(vector, out) {\n    switch (vector.length) {\n    case 2: return this.transformVector2(vector, out);\n    case 3: return this.transformVector3(vector, out);\n    case 4: return this.transformVector4(vector, out);\n    default: throw new Error('Illegal vector');\n    }\n  }\n}\n"]}