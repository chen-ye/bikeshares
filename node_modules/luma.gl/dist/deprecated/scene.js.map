{"version":3,"sources":["../../src/deprecated/scene.js"],"names":["MAX_TEXTURES","MAX_POINT_LIGHTS","PICKING_RES","INVALID_ARGUMENT","DEFAULT_SCENE_OPTS","lights","enable","ambient","r","g","b","directional","direction","x","y","z","color","effects","fog","clearColor","clearDepth","backgroundColor","a","backgroundDepth","Scene","gl","opts","config","needsRedraw","Object","seal","redraw","clearRedrawFlags","traverse","model","getNeedsRedraw","bg","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","uniforms","display","renderObject","assign","getSceneUniforms","render","group","position","points","getEffectsUniforms","enableLights","getAmbientUniforms","getDirectionalUniforms","getPointUniforms","ambientColor","dir","normalize","scale","directionalColor","lightingDirection","Array","numberPoints","length","pointLocations","pointColors","enableSpecular","pointSpecularColors","point","diffuse","specular","pointColor","push","Number","Boolean","pointLocation","pointSpecularColor","hasFog","fogNear","near","fogFar","far","fogColor"],"mappings":"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","file":"scene.js","sourcesContent":["// Scene Object management and rendering\n/* eslint-disable max-statements, no-try-catch */\n\nimport {Vector3} from '../packages/math';\nimport {merge} from '../utils';\nimport Group from '../core/group';\nimport pickModels from '../core/pick-models';\nimport assert from 'assert';\n\nexport const MAX_TEXTURES = 10;\nexport const MAX_POINT_LIGHTS = 4;\nexport const PICKING_RES = 4;\n\nconst INVALID_ARGUMENT = 'LumaGL.Scene invalid argument';\n\nconst DEFAULT_SCENE_OPTS = {\n  lights: {\n    enable: false,\n    // ambient light\n    ambient: {r: 0.2, g: 0.2, b: 0.2},\n    // directional light\n    directional: {\n      direction: {x: 1, y: 1, z: 1},\n      color: {r: 0, g: 0, b: 0}\n    }\n    // point light\n    // points: []\n  },\n  effects: {\n    fog: false\n    // { near, far, color }\n  },\n  clearColor: true,\n  clearDepth: true,\n  backgroundColor: {r: 0, g: 0, b: 0, a: 1},\n  backgroundDepth: 1\n};\n\n// Scene class\nexport default class Scene extends Group {\n\n  constructor(gl, opts) {\n    assert(gl, INVALID_ARGUMENT);\n\n    opts = merge(DEFAULT_SCENE_OPTS, opts);\n\n    super(opts);\n\n    this.gl = gl;\n    this.config = opts;\n    this.needsRedraw = false;\n    Object.seal(this);\n  }\n\n  setNeedsRedraw(redraw = true) {\n    this.needsRedraw = redraw;\n    return this;\n  }\n\n  getNeedsRedraw({clearRedrawFlags = false} = {}) {\n    let redraw = false;\n    redraw = redraw || this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !clearRedrawFlags;\n    this.traverse(model => {\n      redraw = redraw || model.getNeedsRedraw({clearRedrawFlags});\n    });\n    return redraw;\n  }\n\n  clear() {\n    const {gl} = this;\n    if (this.config.clearColor) {\n      const bg = this.config.backgroundColor;\n      gl.clearColor(bg.r, bg.g, bg.b, bg.a);\n    }\n    if (this.config.clearDepth) {\n      gl.clearDepth(this.config.backgroundDepth);\n    }\n    if (this.config.clearColor && this.config.clearDepth) {\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    } else if (this.config.clearColor) {\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    } else if (this.config.clearDepth) {\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    return this;\n  }\n\n  // Renders all objects in the scene.\n  render(uniforms = {}) {\n    this.clear();\n    // Go through each model and render it.\n    this.traverse(model => {\n      if (model.display) {\n        this.renderObject({model, uniforms});\n      }\n    });\n    return this;\n  }\n\n  renderObject({model, uniforms}) {\n    // Setup lighting and scene effects like fog, etc.\n    uniforms = Object.assign({}, this.getSceneUniforms(), uniforms);\n    model.render(uniforms);\n    return this;\n  }\n\n  pickModels(opts = {}) {\n    const {x, y, uniforms = {}} = opts;\n    return pickModels(this.gl, Object.assign({\n      group: this,\n      position: [x, y],\n      uniforms\n    }, opts));\n  }\n\n  // Setup the lighting system: ambient, directional, point lights.\n  getSceneUniforms() {\n    // Setup Lighting\n    const {enable, ambient, directional, points} = this.config.lights;\n\n    // Set light uniforms. Ambient and directional lights.\n    return Object.assign({},\n      this.getEffectsUniforms(),\n      {enableLights: enable},\n      (enable && ambient ? this.getAmbientUniforms(ambient) : {}),\n      (enable && directional ? this.getDirectionalUniforms(directional) : {}),\n      (enable && points ? this.getPointUniforms(points) : {})\n    );\n  }\n\n  getAmbientUniforms(ambient) {\n    return {\n      ambientColor: [ambient.r, ambient.g, ambient.b]\n    };\n  }\n\n  getDirectionalUniforms(directional) {\n    const {color, direction} = directional;\n\n    // Normalize lighting direction vector\n    const dir = new Vector3(direction.x, direction.y, direction.z)\n      .normalize()\n      .scale(-1, -1, -1);\n\n    return {\n      directionalColor: [color.r, color.g, color.b],\n      lightingDirection: [dir.x, dir.y, dir.z]\n    };\n  }\n\n  getPointUniforms(points) {\n    points = points instanceof Array ? points : [points];\n    const numberPoints = points.length;\n    const uniforms = {numberPoints};\n\n    const pointLocations = [];\n    const pointColors = [];\n    const enableSpecular = [];\n    const pointSpecularColors = [];\n    for (const point of points) {\n      const {position, color, diffuse, specular} = point;\n      const pointColor = color || diffuse;\n\n      pointLocations.push(position.x, position.y, position.z);\n      pointColors.push(pointColor.r, pointColor.g, pointColor.b);\n\n      // Add specular color\n      enableSpecular.push(Number(Boolean(specular)));\n      if (specular) {\n        pointSpecularColors.push(specular.r, specular.g, specular.b);\n      } else {\n        pointSpecularColors.push(0, 0, 0);\n      }\n    }\n\n    if (pointLocations.length) {\n      Object.assign(uniforms, {\n        pointLocation: pointLocations,\n        pointColor: pointColors,\n        enableSpecular,\n        pointSpecularColor: pointSpecularColors\n      });\n    }\n\n    return uniforms;\n  }\n\n  // Setup effects like fog, etc.\n  getEffectsUniforms() {\n    const {fog} = this.config.effects;\n\n    if (fog) {\n      const {color = {r: 0.5, g: 0.5, b: 0.5}} = fog;\n      return {\n        hasFog: true,\n        fogNear: fog.near,\n        fogFar: fog.far,\n        fogColor: [color.r, color.g, color.b]\n      };\n    }\n    return {hasFog: false};\n  }\n}\n\nScene.MAX_TEXTURES = 4;\nScene.MAX_POINT_LIGHTS = 4;\nScene.PICKING_RES = 4;\n"]}