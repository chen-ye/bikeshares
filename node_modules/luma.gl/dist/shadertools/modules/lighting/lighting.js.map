{"version":3,"sources":["../../../../src/shadertools/modules/lighting/lighting.js"],"names":["getUniforms","vertexShader","fragmentShader","name","config","MAX_POINT_LIGHTS","lightingEnable","lightingAmbientColor","lightingDirection","lightingDirectionalColor","lightingPointLights","Object","assign","getDirectionalUniforms","getPointUniforms","color","direction","dir","x","y","z","normalize","scale","directionalColor","r","g","b","points","Array","numberPoints","length","pointLocations","pointColors","enableSpecular","pointSpecularColors","point","position","diffuse","specular","pointColor","push","Number","Boolean","pointLocation","pointSpecularColor"],"mappings":";;;;;;QAuBgBA,W,GAAAA,W;;AAvBhB;;AAEA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMC,uGAAN;;AAKA,IAAMC,6GAAN;;AAKA,IAAMC,sBAAO,UAAb;;AAEA,IAAMC,0BAAS;AACpBC,oBAAkB;AADE,CAAf;;AAIP;AACO,SAASL,WAAT,OAYJ;AAAA,iCAXDM,cAWC;AAAA,MAXDA,cAWC,uCAXgB,KAWhB;AAAA,mCARDC,oBAQC;AAAA,MARDA,oBAQC,yCARsB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAQtB;AAAA,mCALDC,iBAKC;AAAA,MALDA,iBAKC,yCALmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAKnB;AAAA,oCAJDC,wBAIC;AAAA,MAJDA,wBAIC,0CAJ0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAI1B;AAAA,mCADDC,mBACC;AAAA,MADDA,mBACC,yCADqB,EACrB;;AACD;AACA,SAAOC,OAAOC,MAAP,CACL;AACEN,kCADF;AAEE;AACAC;AAHF,GADK,EAMLM,uBAAuBL,iBAAvB,CANK,EAOLM,iBAAiBJ,mBAAjB,CAPK,CAAP;AASD;;AAED,SAASG,sBAAT,QAAoD;AAAA,MAAnBE,KAAmB,SAAnBA,KAAmB;AAAA,MAAZC,SAAY,SAAZA,SAAY;;AAClD;AACA,MAAMC,MAAM,kBAAYD,UAAUE,CAAtB,EAAyBF,UAAUG,CAAnC,EAAsCH,UAAUI,CAAhD,EACTC,SADS,GAETC,KAFS,CAEH,CAAC,CAFE,EAEC,CAAC,CAFF,EAEK,CAAC,CAFN,CAAZ;;AAIA,SAAO;AACLC,sBAAkB,CAACR,MAAMS,CAAP,EAAUT,MAAMU,CAAhB,EAAmBV,MAAMW,CAAzB,CADb;AAELlB,uBAAmB,CAACS,IAAIC,CAAL,EAAQD,IAAIE,CAAZ,EAAeF,IAAIG,CAAnB;AAFd,GAAP;AAID;;AAED,SAASN,gBAAT,CAA0Ba,MAA1B,EAAkC;AAChCA,WAASA,kBAAkBC,KAAlB,GAA0BD,MAA1B,GAAmC,CAACA,MAAD,CAA5C;AACA,MAAME,eAAeF,OAAOG,MAA5B;AACA,MAAMC,iBAAiB,EAAvB;AACA,MAAMC,cAAc,EAApB;AACA,MAAMC,iBAAiB,EAAvB;AACA,MAAMC,sBAAsB,EAA5B;AANgC;AAAA;AAAA;;AAAA;AAOhC,yBAAoBP,MAApB,8HAA4B;AAAA,UAAjBQ,KAAiB;AAAA,UACnBC,QADmB,GACmBD,KADnB,CACnBC,QADmB;AAAA,UACTrB,KADS,GACmBoB,KADnB,CACTpB,KADS;AAAA,UACFsB,OADE,GACmBF,KADnB,CACFE,OADE;AAAA,UACOC,QADP,GACmBH,KADnB,CACOG,QADP;;AAE1B,UAAMC,aAAaxB,SAASsB,OAA5B;;AAEAN,qBAAeS,IAAf,CAAoBJ,SAASlB,CAA7B,EAAgCkB,SAASjB,CAAzC,EAA4CiB,SAAShB,CAArD;AACAY,kBAAYQ,IAAZ,CAAiBD,WAAWf,CAA5B,EAA+Be,WAAWd,CAA1C,EAA6Cc,WAAWb,CAAxD;;AAEA;AACAO,qBAAeO,IAAf,CAAoBC,OAAOC,QAAQJ,QAAR,CAAP,CAApB;AACA,UAAIA,QAAJ,EAAc;AACZJ,4BAAoBM,IAApB,CAAyBF,SAASd,CAAlC,EAAqCc,SAASb,CAA9C,EAAiDa,SAASZ,CAA1D;AACD,OAFD,MAEO;AACLQ,4BAAoBM,IAApB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACD;AACF;AArB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBhC,SAAO;AACLX,8BADK;AAELc,mBAAeZ,cAFV;AAGLQ,gBAAYP,WAHP;AAILC,kCAJK;AAKLW,wBAAoBV;AALf,GAAP;AAOD","file":"lighting.js","sourcesContent":["import {Vector3} from '../../../packages/math';\n\nimport commonShader from './lighting-common.glsl';\nimport vertexShader1 from './lighting-vertex.glsl';\nimport fragmentShader1 from './lighting-fragment.glsl';\n\nexport const vertexShader = `\\\n${commonShader}\n${vertexShader1}\n`;\n\nexport const fragmentShader = `\\\n${commonShader}\n${fragmentShader1}\n`;\n\nexport const name = 'lighting';\n\nexport const config = {\n  MAX_POINT_LIGHTS: 4\n};\n\n// Setup the lighting system: ambient, directional, point lights.\nexport function getUniforms({\n  lightingEnable = false,\n\n  // ambient light\n  lightingAmbientColor = [0.2, 0.2, 0.2],\n\n  // directional light\n  lightingDirection = [1, 1, 1],\n  lightingDirectionalColor = [0, 0, 0],\n\n  // point lights\n  lightingPointLights = []\n}) {\n  // Set light uniforms. Ambient, directional and point lights.\n  return Object.assign(\n    {\n      lightingEnable,\n      // Ambient\n      lightingAmbientColor\n    },\n    getDirectionalUniforms(lightingDirection),\n    getPointUniforms(lightingPointLights)\n  );\n}\n\nfunction getDirectionalUniforms({color, direction}) {\n  // Normalize lighting direction vector\n  const dir = new Vector3(direction.x, direction.y, direction.z)\n    .normalize()\n    .scale(-1, -1, -1);\n\n  return {\n    directionalColor: [color.r, color.g, color.b],\n    lightingDirection: [dir.x, dir.y, dir.z]\n  };\n}\n\nfunction getPointUniforms(points) {\n  points = points instanceof Array ? points : [points];\n  const numberPoints = points.length;\n  const pointLocations = [];\n  const pointColors = [];\n  const enableSpecular = [];\n  const pointSpecularColors = [];\n  for (const point of points) {\n    const {position, color, diffuse, specular} = point;\n    const pointColor = color || diffuse;\n\n    pointLocations.push(position.x, position.y, position.z);\n    pointColors.push(pointColor.r, pointColor.g, pointColor.b);\n\n    // Add specular color\n    enableSpecular.push(Number(Boolean(specular)));\n    if (specular) {\n      pointSpecularColors.push(specular.r, specular.g, specular.b);\n    } else {\n      pointSpecularColors.push(0, 0, 0);\n    }\n  }\n\n  return {\n    numberPoints,\n    pointLocation: pointLocations,\n    pointColor: pointColors,\n    enableSpecular,\n    pointSpecularColor: pointSpecularColors\n  };\n}\n"]}