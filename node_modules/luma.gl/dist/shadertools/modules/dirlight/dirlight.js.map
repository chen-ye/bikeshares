{"version":3,"sources":["../../../../src/shadertools/modules/dirlight/dirlight.js"],"names":["DEFAULT_LIGHT_DIRECTION","Float32Array","DEFAULT_MODULE_OPTIONS","lightDirection","getUniforms","opts","uniforms","dirlight_uLightDirection","vs","fs","name","dependencies"],"mappings":";;;;;;AAEA;;;;;;AAEA;AACA,IAAMA,0BAA0B,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB,CAAhC,C,CALA;;AAOA,IAAMC,yBAAyB;AAC7BC,kBAAgBH;AADa,CAA/B;;AAIA,SAASI,WAAT,GAAoD;AAAA,MAA/BC,IAA+B,uEAAxBH,sBAAwB;;AAClD,MAAMI,WAAW,EAAjB;AACA,MAAID,KAAKF,cAAT,EAAyB;AACvBG,aAASC,wBAAT,GAAoCF,KAAKF,cAAzC;AACD;AACD,SAAOG,QAAP;AACD;;AAED;AACA,IAAME,KAAK,IAAX;;AAEA,IAAMC,iUAAN;;kBAae;AACbC,QAAM,UADO;AAEbF,QAFa;AAGbC,QAHa;AAIbL,0BAJa;AAKbO,gBAAc;AALD,C","file":"dirlight.js","sourcesContent":["// Cheap lighting - single directional light, single dot product, one uniform\n\nimport project from '../project/project';\n\n/* eslint-disable camelcase */\nconst DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\n// TODO - reuse normal from geometry module\nconst vs = null;\n\nconst fs = `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\nexport default {\n  name: 'dirlight',\n  vs,\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n"]}