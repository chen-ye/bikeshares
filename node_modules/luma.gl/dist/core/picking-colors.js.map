{"version":3,"sources":["../../src/core/picking-colors.js"],"names":["encodePickingColor","decodePickingColor","getNullPickingColor","NULL_PICKING_COLOR","Uint8Array","i","color","i1","i2","i3","index"],"mappings":";;;;;;;;QAGgBA,kB,GAAAA,kB;QASAC,kB,GAAAA,kB;QASAC,mB,GAAAA,mB;AArBhB,IAAMC,qBAAqB,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAA3B;;AAEA;AACO,SAASJ,kBAAT,CAA4BK,CAA5B,EAA+B;AACpC,SAAO,CACJA,IAAI,CAAL,GAAU,GADL,EAEHA,IAAI,CAAL,IAAW,CAAZ,GAAiB,GAFZ,EAGHA,IAAI,CAAL,IAAW,EAAZ,GAAkB,GAHb,CAAP;AAKD;;AAED;AACO,SAASJ,kBAAT,CAA4BK,KAA5B,EAAmC;AACxC;AADwC,8BAEnBA,KAFmB;AAAA,MAEjCC,EAFiC;AAAA,MAE7BC,EAF6B;AAAA,MAEzBC,EAFyB;AAGxC;;;AACA,MAAMC,QAAQH,KAAKC,KAAK,GAAV,GAAgBC,KAAK,KAArB,GAA6B,CAA3C;AACA,SAAOC,KAAP;AACD;;AAED;AACO,SAASR,mBAAT,GAA+B;AACpC,SAAOC,kBAAP;AACD","file":"picking-colors.js","sourcesContent":["const NULL_PICKING_COLOR = new Uint8Array([0, 0, 0]);\n\n// Encodes an index as a Uint8Array([r, g, b]) format picking color\nexport function encodePickingColor(i) {\n  return [\n    (i + 1) & 255,\n    ((i + 1) >> 8) & 255,\n    ((i + 1) >> 16) & 255\n  ];\n}\n\n// Decodes a picking color in [r, g, b] format to an index\nexport function decodePickingColor(color) {\n  // assert(color instanceof Uint8Array);\n  const [i1, i2, i3] = color;\n  // 1 was added to seperate from no selection\n  const index = i1 + i2 * 256 + i3 * 65536 - 1;\n  return index;\n}\n\n// Return picking color representing no item at that pixel\nexport function getNullPickingColor() {\n  return NULL_PICKING_COLOR;\n}\n"]}