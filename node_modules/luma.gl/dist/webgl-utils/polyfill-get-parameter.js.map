{"version":3,"sources":["../../src/webgl-utils/polyfill-get-parameter.js"],"names":["getParameterPolyfill","OES_element_index","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","WEBGL_debug_renderer_info","GL_FRAGMENT_SHADER_DERIVATIVE_HINT","GL_DONT_CARE","GL_GPU_DISJOINT_EXT","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getWebGL2ValueOrZero","isWebGL2","gl","undefined","WEBGL_PARAMETERS","RASTERIZER_DISCARD","SAMPLES","getParameter","ext","getExtension","GPU_DISJOINT_EXT","UNMASKED_VENDOR_WEBGL","VENDOR","UNMASKED_RENDERER_WEBGL","RENDERER","luma","extensions","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_DRAW_BUFFERS_WEBGL","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXEL_OFFSET","UNIFORM_BUFFER_OFFSET_ALIGNMENT","GL_TEXTURE_BINDING_3D","TEXTURE_BINDING_3D","originalGetParameter","pname","limit","value","result"],"mappings":"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","file":"polyfill-get-parameter.js","sourcesContent":["/* eslint-disable no-inline-comments, max-len, camelcase */\nimport GL from './constants';\n\nconst OES_element_index = 'OES_element_index';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_disjoint_timer_query_webgl2 = 'EXT_disjoint_timer_query_webgl2';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nconst WEBGL_debug_renderer_info = 'WEBGL_debug_renderer_info';\n\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8FBB;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nconst getWebGL2ValueOrZero = gl => !isWebGL2(gl) ? 0 : undefined;\n\n// if a function returns undefined in this table,\n// the original getParameter will be called, defeating the override\nconst WEBGL_PARAMETERS = {\n  // WebGL2 context parameters\n  [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]:\n    gl => !isWebGL2(gl) ? GL_DONT_CARE : undefined,\n\n  [GL.RASTERIZER_DISCARD]: getWebGL2ValueOrZero,\n\n  [GL.SAMPLES]: getWebGL2ValueOrZero,\n\n  // WebGL2 extension context parameters\n  [GL_GPU_DISJOINT_EXT]:\n    (gl, getParameter) => {\n      const ext = isWebGL2(gl) ?\n        gl.getExtension(EXT_disjoint_timer_query_webgl2) :\n        gl.getExtension(EXT_disjoint_timer_query);\n      return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n    },\n\n  // Extension fixed values\n  [GL_UNMASKED_VENDOR_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_VENDOR_WEBGL) || GL.VENDOR);\n    },\n\n  [GL_UNMASKED_RENDERER_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_RENDERER_WEBGL) || GL.RENDERER);\n    },\n\n  // Extension LIMITS\n  [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]:\n    (gl, getParameter) => {\n      const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n      return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n    },\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: getWebGL2ValueOrZero,\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: getWebGL2ValueOrZero,\n  [GL.MAX_COLOR_ATTACHMENTS]:\n    (gl, getParameter) => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_DRAW_BUFFERS]:\n    gl => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_ELEMENT_INDEX]:\n    // Guess: per webglstats.com 99.6% of webgl2 supports 2147483647\n    gl => gl.getExtension(OES_element_index) ? 2147483647 : 65535,\n  [GL.MAX_ELEMENTS_INDICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => gl.getExtension(OES_element_index) ? 16777216 : 65535,\n  [GL.MAX_ELEMENTS_VERTICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => 16777216,\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_SAMPLES]: getWebGL2ValueOrZero,\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: getWebGL2ValueOrZero,\n  [GL.MAX_TEXTURE_LOD_BIAS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: getWebGL2ValueOrZero,\n  [GL.MAX_VARYING_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: getWebGL2ValueOrZero\n};\n\n// Return true if WebGL2 context\nfunction isWebGL2(gl) {\n  const GL_TEXTURE_BINDING_3D = 0x806A;\n  return gl && gl.TEXTURE_BINDING_3D === GL_TEXTURE_BINDING_3D;\n}\n\n// A \"replacement\" gl.getParameter that accepts \"enums\" from extensions and WebGL2\n// and returns reasonably safe defaults\nexport function getParameterPolyfill(gl, originalGetParameter, pname) {\n\n  // Return mock limits (usually 0) for WebGL2 constants to ensure these\n  // can be queries without error\n  const limit = WEBGL_PARAMETERS[pname];\n  const value = typeof limit === 'function' ? limit(gl, originalGetParameter, pname) : limit;\n  const result = value !== undefined ? value : originalGetParameter(pname);\n  return result;\n}\n"]}