{"version":3,"sources":["../../src/webgl/context-limits.js"],"names":["getContextLimits","getGLContextInfo","getGLContextInfo2","getContextInfo","glGetDebugInfo","WEBGL_LIMITS","ALIASED_LINE_WIDTH_RANGE","gl1","Float32Array","ALIASED_POINT_SIZE_RANGE","MAX_TEXTURE_SIZE","gl2","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_RENDERBUFFER_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","Int32Array","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","negative","MAX_PROGRAM_TEXEL_OFFSET","UNIFORM_BUFFER_OFFSET_ALIGNMENT","gl","luma","limits","webgl1MinLimits","webgl2MinLimits","isWebgl2","parameter","limit","webgl1MinLimit","webgl2MinLimit","minLimit","limitNotAvailable","getExtension","extension","value","getParameter","info","VENDOR","RENDERER","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","VERSION","SHADING_LANGUAGE_VERSION","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","vendorMasked","rendererMasked","ext","vendorUnmasked","rendererUnmasked","vendor","renderer","version","shadingLanguageVersion","TEST_EXPORTS"],"mappings":";;;;;;;;;QAsDgBA,gB,GAAAA,gB;QAiCAC,gB,GAAAA,gB;QAuBAC,iB,GAAAA,iB;QAgBAC,c,GAAAA,c;QAyBAC,c,GAAAA,c;;AAtJhB;;;;AACA;;;;kNAFA;;;AAIA,IAAMC,mEACH,sBAAGC,wBADA,EAC2B,EAACC,KAAK,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAN,EAD3B,kCAEH,sBAAGC,wBAFA,EAE2B,EAACF,KAAK,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAN,EAF3B,kCAGH,sBAAGE,gBAHA,EAGmB,EAACH,KAAK,EAAN,EAAUI,KAAK,IAAf,EAHnB,kCAIH,sBAAGC,yBAJA,EAI4B,EAACL,KAAK,EAAN,EAJ5B,kCAKH,sBAAGM,uBALA,EAK0B,EAACN,KAAK,CAAN,EAL1B,kCAMH,sBAAGO,gCANA,EAMmC,EAACP,KAAK,CAAN,EANnC,kCAOH,sBAAGQ,8BAPA,EAOiC,EAACR,KAAK,CAAN,EAPjC,kCAQH,sBAAGS,qBARA,EAQwB,EAACT,KAAK,CAAN,EARxB,kCASH,sBAAGU,mBATA,EASsB,EAACV,KAAK,CAAN,EATtB,kCAUH,sBAAGW,kBAVA,EAUqB,EAACX,KAAK,CAAN,EAVrB,kCAWH,sBAAGY,0BAXA,EAW6B,EAACZ,KAAK,GAAN,EAX7B,kCAYH,sBAAGa,4BAZA,EAY+B,EAACb,KAAK,EAAN,EAZ/B,kCAaH,sBAAGc,iBAbA,EAaoB,EAACd,KAAK,IAAIe,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,CAAf,CAAN,EAbpB,kCAmBH,sBAAGC,mBAnBA,EAmBsB,EAAChB,KAAK,CAAN,EAASI,KAAK,GAAd,EAnBtB,kCAoBH,sBAAGa,wBApBA,EAoB2B,EAACjB,KAAK,CAAN,EAASI,KAAK,GAAd,EApB3B,kCAqBH,sBAAGc,6BArBA,EAqBgC,EAAClB,KAAK,CAAN,EAASI,KAAK,CAAd,EArBhC,kCAsBH,sBAAGe,qBAtBA,EAsBwB,EAACnB,KAAK,CAAN,EAASI,KAAK,CAAd,EAtBxB,kCAuBH,sBAAGgB,wCAvBA,EAuB2C,EAACpB,KAAK,CAAN,EAASI,KAAK,CAAd,EAvB3C,kCAwBH,sBAAGiB,2BAxBA,EAwB8B,EAACrB,KAAK,CAAN,EAASI,KAAK,CAAd,EAxB9B,kCAyBH,sBAAGkB,sCAzBA,EAyByC,EAACtB,KAAK,CAAN,EAASI,KAAK,CAAd,EAzBzC,kCA0BH,sBAAGmB,gBA1BA,EA0BmB,EAACvB,KAAK,CAAN,EAASI,KAAK,CAAd,EA1BnB,kCA2BH,sBAAGoB,iBA3BA,EA2BoB,EAACxB,KAAK,CAAN,EAASI,KAAK,CAAd,EA3BpB,kCA4BH,sBAAGqB,oBA5BA,EA4BuB,EAACzB,KAAK,CAAN,EAASI,KAAK,CAAd,EA5BvB,kCA6BH,sBAAGsB,qBA7BA,EA6BwB,EAAC1B,KAAK,CAAN,EAASI,KAAK,CAAd,EA7BxB,kCA8BH,sBAAGuB,6BA9BA,EA8BgC,EAAC3B,KAAK,CAAN,EAASI,KAAK,CAAd,EA9BhC,kCA+BH,sBAAGwB,2BA/BA,EA+B8B,EAAC5B,KAAK,CAAN,EAASI,KAAK,CAAd,EA/B9B,kCAgCH,sBAAGyB,+BAhCA,EAgCkC,EAAC7B,KAAK,CAAN,EAASI,KAAK,CAAd,EAhClC,kCAiCH,sBAAG0B,WAjCA,EAiCc,EAAC9B,KAAK,CAAN,EAASI,KAAK,CAAd,EAjCd,kCAkCH,sBAAG2B,uBAlCA,EAkC0B,EAAC/B,KAAK,CAAN,EAASI,KAAK,CAAd,EAlC1B,kCAmCH,sBAAG4B,oBAnCA,EAmCuB,EAAChC,KAAK,CAAN,EAASI,KAAK,CAAd,EAnCvB,kCAoCH,sBAAG6B,6CApCA,EAoCgD,EAACjC,KAAK,CAAN,EAASI,KAAK,CAAd,EApChD,kCAqCH,sBAAG8B,uCArCA,EAqC0C,EAAClC,KAAK,CAAN,EAASI,KAAK,CAAd,EArC1C,kCAsCH,sBAAG+B,0CAtCA,EAsC6C,EAACnC,KAAK,CAAN,EAASI,KAAK,CAAd,EAtC7C,kCAuCH,sBAAGgC,sBAvCA,EAuCyB,EAACpC,KAAK,CAAN,EAASI,KAAK,CAAd,EAvCzB,kCAwCH,sBAAGiC,2BAxCA,EAwC8B,EAACrC,KAAK,CAAN,EAASI,KAAK,CAAd,EAxC9B,kCAyCH,sBAAGkC,sBAzCA,EAyCyB,EAACtC,KAAK,CAAN,EAASI,KAAK,CAAd,EAzCzB,kCA0CH,sBAAGmC,4BA1CA,EA0C+B,EAACvC,KAAK,CAAN,EAASI,KAAK,CAAd,EA1C/B,kCA2CH,sBAAGoC,yBA3CA,EA2C4B,EAACxC,KAAK,CAAN,EAASI,KAAK,CAAd,EA3C5B,kCA4CH,sBAAGqC,6BA5CA,EA4CgC,EAACzC,KAAK,CAAN,EAASI,KAAK,CAAd,EA5ChC,kCA6CH,sBAAGsC,wBA7CA,EA6C2B,EAAC1C,KAAK,CAAN,EAASI,KAAK,CAAC,CAAf,EAAkBuC,UAAU,IAA5B,EA7C3B,kCA8CH,sBAAGC,wBA9CA,EA8C2B,EAAC5C,KAAK,CAAN,EAASI,KAAK,CAAd,EA9C3B,kCA+CH,sBAAGyC,+BA/CA,EA+CkC,EAAC7C,KAAK,CAAN,EAASI,KAAK,CAAd,CAAiB;AAAjB,CA/ClC,iBAAN;;AAkDO,SAASX,gBAAT,CAA0BqD,EAA1B,EAA8B;AACnCA,KAAGC,IAAH,GAAUD,GAAGC,IAAH,IAAW,EAArB;;AAEA,MAAI,CAACD,GAAGC,IAAH,CAAQC,MAAb,EAAqB;AACnBF,OAAGC,IAAH,CAAQC,MAAR,GAAiB,EAAjB;AACAF,OAAGC,IAAH,CAAQE,eAAR,GAA0B,EAA1B;AACAH,OAAGC,IAAH,CAAQG,eAAR,GAA0B,EAA1B;;AAEA,QAAMC,WAAW,uBAASL,EAAT,CAAjB;;AAEA;AACA,SAAK,IAAMM,SAAX,IAAwBtD,YAAxB,EAAsC;AACpC,UAAMuD,QAAQvD,aAAasD,SAAb,CAAd;;AAEA,UAAME,iBAAiBD,MAAMrD,GAA7B;AACA,UAAMuD,iBAAiB,SAASF,KAAT,GAAiBA,MAAMjD,GAAvB,GAA6BiD,MAAMrD,GAA1D;AACA,UAAMwD,WAAWL,WAAWI,cAAX,GAA4BD,cAA7C;;AAEA;AACA,UAAMG,oBACH,SAASJ,KAAT,IAAkB,CAACF,QAApB,IACC,eAAeE,KAAf,IAAwB,CAACP,GAAGY,YAAH,CAAgBL,MAAMM,SAAtB,CAF5B;;AAIA,UAAMC,QAAQH,oBAAoBD,QAApB,GAA+BV,GAAGe,YAAH,CAAgBT,SAAhB,CAA7C;AACAN,SAAGC,IAAH,CAAQC,MAAR,CAAeI,SAAf,IAA4BQ,KAA5B;AACAd,SAAGC,IAAH,CAAQE,eAAR,CAAwBG,SAAxB,IAAqCE,cAArC;AACAR,SAAGC,IAAH,CAAQG,eAAR,CAAwBE,SAAxB,IAAqCG,cAArC;AACD;AACF;;AAED,SAAOT,GAAGC,IAAH,CAAQC,MAAf;AACD;;AAEM,SAAStD,gBAAT,CAA0BoD,EAA1B,EAA8B;AACnCA,KAAGC,IAAH,GAAUD,GAAGC,IAAH,IAAW,EAArB;;AAEA,MAAI,CAACD,GAAGC,IAAH,CAAQe,IAAb,EAAmB;AAAA;;AACjB,QAAMA,OAAOhB,GAAGY,YAAH,CAAgB,2BAAhB,CAAb;AACAZ,OAAGC,IAAH,CAAQe,IAAR,uDACG,sBAAGC,MADN,EACejB,GAAGe,YAAH,CAAgB,sBAAGE,MAAnB,CADf,kCAEG,sBAAGC,QAFN,EAEiBlB,GAAGe,YAAH,CAAgB,sBAAGG,QAAnB,CAFjB,kCAGG,sBAAGC,qBAHN,EAIInB,GAAGe,YAAH,CAAiBC,QAAQA,KAAKG,qBAAd,IAAwC,sBAAGF,MAA3D,CAJJ,kCAKG,sBAAGG,uBALN,EAMIpB,GAAGe,YAAH,CAAiBC,QAAQA,KAAKI,uBAAd,IAA0C,sBAAGF,QAA7D,CANJ,kCAOG,sBAAGG,OAPN,EAOgBrB,GAAGe,YAAH,CAAgB,sBAAGM,OAAnB,CAPhB,kCAQG,sBAAGC,wBARN,EAQiCtB,GAAGe,YAAH,CAAgB,sBAAGO,wBAAnB,CARjC;AAUD;;AAED,SAAOtB,GAAGC,IAAH,CAAQe,IAAf;AACD;;AAED,IAAMO,2BAA2B,MAAjC,C,CAAyC;AACzC,IAAMC,6BAA6B,MAAnC,C,CAA2C;;AAEpC,SAAS3E,iBAAT,CAA2BmD,EAA3B,EAA+B;AACpC,MAAMyB,eAAezB,GAAGe,YAAH,CAAgB,sBAAGE,MAAnB,CAArB;AACA,MAAMS,iBAAiB1B,GAAGe,YAAH,CAAgB,sBAAGG,QAAnB,CAAvB;AACA,MAAMS,MAAM3B,GAAGY,YAAH,CAAgB,2BAAhB,CAAZ;AACA,MAAMgB,iBAAiBD,OAAO3B,GAAGe,YAAH,CAAgBY,IAAIR,qBAAJ,IAA6B,sBAAGF,MAAhD,CAA9B;AACA,MAAMY,mBAAmBF,OAAO3B,GAAGe,YAAH,CAAgBY,IAAIP,uBAAJ,IAA+B,sBAAGF,QAAlD,CAAhC;AACA,SAAO;AACLY,YAAQF,kBAAkBH,YADrB;AAELM,cAAUF,oBAAoBH,cAFzB;AAGLD,8BAHK;AAILC,kCAJK;AAKLM,aAAShC,GAAGe,YAAH,CAAgB,sBAAGM,OAAnB,CALJ;AAMLY,4BAAwBjC,GAAGe,YAAH,CAAgB,sBAAGO,wBAAnB;AANnB,GAAP;AAQD;;AAEM,SAASxE,cAAT,CAAwBkD,EAAxB,EAA4B;AACjC,MAAME,SAASvD,iBAAiBqD,EAAjB,CAAf;AACA,MAAMgB,OAAOpE,iBAAiBoD,EAAjB,CAAb;AACA,SAAO;AACL;AACA8B,YAAQd,KAAKO,wBAAL,KAAkCP,KAAK,sBAAGC,MAAR,CAFrC;AAGLc,cAAUf,KAAKQ,0BAAL,KAAoCR,KAAK,sBAAGE,QAAR,CAHzC;AAILc,aAAShB,KAAK,sBAAGK,OAAR,CAJJ;AAKLY,4BAAwBjB,KAAK,sBAAGM,wBAAR,CALnB;AAML;AACAN,cAPK;AAQLd,kBARK;AASLC,qBAAiBH,GAAGC,IAAH,CAAQE,eATpB;AAULC,qBAAiBJ,GAAGC,IAAH,CAAQG;AAVpB,GAAP;AAYD;;AAED;;AAEA;;;;;;AAMO,SAASrD,cAAT,CAAwBiD,EAAxB,EAA4B;AACjC,SAAOnD,kBAAkBmD,EAAlB,CAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEM,IAAMkC,sCAAe;AAC1BlF;AAD0B,CAArB","file":"context-limits.js","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from './gl-constants';\nimport {isWebGL2} from './context';\n\nconst WEBGL_LIMITS = {\n  [GL.ALIASED_LINE_WIDTH_RANGE]: {gl1: new Float32Array([1, 1])},\n  [GL.ALIASED_POINT_SIZE_RANGE]: {gl1: new Float32Array([1, 1])},\n  [GL.MAX_TEXTURE_SIZE]: {gl1: 64, gl2: 2048}, // GLint\n  [GL.MAX_CUBE_MAP_TEXTURE_SIZE]: {gl1: 16}, // GLint\n  [GL.MAX_TEXTURE_IMAGE_UNITS]: {gl1: 8}, // GLint\n  [GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS]: {gl1: 0}, // GLint\n  [GL.MAX_RENDERBUFFER_SIZE]: {gl1: 1}, // GLint\n  [GL.MAX_VARYING_VECTORS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_ATTRIBS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_UNIFORM_VECTORS]: {gl1: 128}, // GLint\n  [GL.MAX_FRAGMENT_UNIFORM_VECTORS]: {gl1: 16}, // GLint\n  [GL.MAX_VIEWPORT_DIMS]: {gl1: new Int32Array([0, 0])},\n\n  // Extensions\n  // [GL.MAX_TEXTURE_MAX_ANISOTROPY_EXT]: {gl1: 1.0, extension: 'EXT_texture_filter_anisotropic'},\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: {gl1: 0, gl2: 256}, //  GLint\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: {gl1: 0, gl2: 256}, // GLint\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_COLOR_ATTACHMENTS]: {gl1: 0, gl2: 4}, //  GLint\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_DRAW_BUFFERS]: {gl1: 0, gl2: 4}, // GLint\n  [GL.MAX_ELEMENT_INDEX]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_ELEMENTS_INDICES]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_ELEMENTS_VERTICES]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_SAMPLES]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_TEXTURE_LOD_BIAS]: {gl1: 0, gl2: 0}, // GLfloat\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_VARYING_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: {gl1: 0, gl2: -8, negative: true}, // GLint\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: {gl1: 0, gl2: 7}, // GLint\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: {gl1: 0, gl2: 0} // GLint\n};\n\nexport function getContextLimits(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.limits) {\n    gl.luma.limits = {};\n    gl.luma.webgl1MinLimits = {};\n    gl.luma.webgl2MinLimits = {};\n\n    const isWebgl2 = isWebGL2(gl);\n\n    // WEBGL limits\n    for (const parameter in WEBGL_LIMITS) {\n      const limit = WEBGL_LIMITS[parameter];\n\n      const webgl1MinLimit = limit.gl1;\n      const webgl2MinLimit = 'gl2' in limit ? limit.gl2 : limit.gl1;\n      const minLimit = isWebgl2 ? webgl2MinLimit : webgl1MinLimit;\n\n      // Check if we can query for this limit\n      const limitNotAvailable =\n        ('gl2' in limit && !isWebgl2) ||\n        ('extension' in limit && !gl.getExtension(limit.extension));\n\n      const value = limitNotAvailable ? minLimit : gl.getParameter(parameter);\n      gl.luma.limits[parameter] = value;\n      gl.luma.webgl1MinLimits[parameter] = webgl1MinLimit;\n      gl.luma.webgl2MinLimits[parameter] = webgl2MinLimit;\n    }\n  }\n\n  return gl.luma.limits;\n}\n\nexport function getGLContextInfo(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.info) {\n    const info = gl.getExtension('WEBGL_debug_renderer_info');\n    gl.luma.info = {\n      [GL.VENDOR]: gl.getParameter(GL.VENDOR),\n      [GL.RENDERER]: gl.getParameter(GL.RENDERER),\n      [GL.UNMASKED_VENDOR_WEBGL]:\n        gl.getParameter((info && info.UNMASKED_VENDOR_WEBGL) || GL.VENDOR),\n      [GL.UNMASKED_RENDERER_WEBGL]:\n        gl.getParameter((info && info.UNMASKED_RENDERER_WEBGL) || GL.RENDERER),\n      [GL.VERSION]: gl.getParameter(GL.VERSION),\n      [GL.SHADING_LANGUAGE_VERSION]: gl.getParameter(GL.SHADING_LANGUAGE_VERSION)\n    };\n  }\n\n  return gl.luma.info;\n}\n\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nexport function getGLContextInfo2(gl) {\n  const vendorMasked = gl.getParameter(GL.VENDOR);\n  const rendererMasked = gl.getParameter(GL.RENDERER);\n  const ext = gl.getExtension('WEBGL_debug_renderer_info');\n  const vendorUnmasked = ext && gl.getParameter(ext.UNMASKED_VENDOR_WEBGL || GL.VENDOR);\n  const rendererUnmasked = ext && gl.getParameter(ext.UNMASKED_RENDERER_WEBGL || GL.RENDERER);\n  return {\n    vendor: vendorUnmasked || vendorMasked,\n    renderer: rendererUnmasked || rendererMasked,\n    vendorMasked,\n    rendererMasked,\n    version: gl.getParameter(GL.VERSION),\n    shadingLanguageVersion: gl.getParameter(GL.SHADING_LANGUAGE_VERSION)\n  };\n}\n\nexport function getContextInfo(gl) {\n  const limits = getContextLimits(gl);\n  const info = getGLContextInfo(gl);\n  return {\n    // basic information\n    vendor: info[GL_UNMASKED_VENDOR_WEBGL] || info[GL.VENDOR],\n    renderer: info[GL_UNMASKED_RENDERER_WEBGL] || info[GL.RENDERER],\n    version: info[GL.VERSION],\n    shadingLanguageVersion: info[GL.SHADING_LANGUAGE_VERSION],\n    // info, caps and limits\n    info,\n    limits,\n    webgl1MinLimits: gl.luma.webgl1MinLimits,\n    webgl2MinLimits: gl.luma.webgl2MinLimits\n  };\n}\n\n// DEBUG INFO\n\n/**\n * Provides strings identifying the GPU vendor and driver.\n * https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @param {WebGLRenderingContext} gl - context\n * @return {Object} - 'vendor' and 'renderer' string fields.\n */\nexport function glGetDebugInfo(gl) {\n  return getGLContextInfo2(gl);\n  // const info = gl.getExtension('WEBGL_debug_renderer_info');\n  // // We can't determine if 'WEBGL_debug_renderer_info' is supported by\n  // // checking whether info is null here. Firefox doesn't follow the\n  // // specs by returning null for unsupported extension. Instead,\n  // // it returns an object without GL_UNMASKED_VENDOR_WEBGL and GL_UNMASKED_RENDERER_WEBGL.\n  // return {\n  //   vendor: (info && info.UNMASKED_VENDOR_WEBGL) ?\n  //     gl.getParameter(info.UNMASKED_VENDOR_WEBGL) : 'unknown',\n  //   renderer: (info && info.UNMASKED_RENDERER_WEBGL) ?\n  //     gl.getParameter(info.UNMASKED_RENDERER_WEBGL) : 'unknown'\n  // };\n}\n\nexport const TEST_EXPORTS = {\n  WEBGL_LIMITS\n};\n"]}