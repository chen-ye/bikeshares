{"version":3,"sources":["../../src/webgl/context-state.js"],"names":["getParameter","getParameters","resetParameters","setParameters","withParameters","withState","glContextWithState","LUMA_SETTERS","bindFramebuffer","gl","args","length","target","handle","FRAMEBUFFER","DRAW_FRAMEBUFFER","READ_FRAMEBUFFER","blend","value","enable","BLEND","disable","blendColor","blendEquation","isArray","blendEquationSeparate","blendFunc","blendFuncSeparate","clearColor","clearDepth","clearStencil","colorMask","cull","CULL_FACE","cullFace","depthTest","DEPTH_TEST","depthFunc","depthMask","depthRange","dither","DITHER","derivativeHint","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","frontFace","mipmapHint","GENERATE_MIPMAP_HINT","lineWidth","polygonOffsetFill","POLYGON_OFFSET_FILL","polygonOffset","sampleCoverage","scissorTest","SCISSOR_TEST","scissor","stencilTest","STENCIL_TEST","stencilMask","mask","backMask","stencilMaskSeparate","FRONT","BACK","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","viewport","array","Array","ArrayBuffer","isView","parameters","key","setter","frameBuffer","nocatch","framebuffer","deprecated","resetStateAfterCall","bind"],"mappings":"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","file":"context-state.js","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from '../webgl-utils/constants';\nimport {pushContextState, popContextState} from '../webgl-utils/track-context-state';\nimport {log} from '../utils';\nimport {isWebGL2} from './context';\nimport assert from 'assert';\n\n// map of parameter setter function names, parameter constants, default values and types\n// - Uses gl function names, except when setter function exist that are named differently\n// - When the WebGL api offers <setter> and <setter>Separate (e.g. blendEquation and\n//   blendEquationSeparate, we use non-separate name, but accept both non-separate and\n//   separate arguments. Thus, a `getParameter` call will always return all the separate values\n//   in an array, in a form that can be accepted by the setter.\nexport const LUMA_SETTERS = {\n  bindFramebuffer: (gl, args) => {\n    assert(args.length === 2, 'bindFramebuffer needs two arguments, target and handle');\n    const [target, handle] = args;\n    if (target === GL.FRAMEBUFFER) {\n      if (isWebGL2(gl)) {\n        // NOTE: https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_framebuffer_blit.txt\n        // As per above spec, under WebGL2, FRAMEBUFFER binding updates both READ_FRAMEBUFFER and DRAW_FRAMEBUFFER\n        // This generates two bindFramebuffer calls so that our cache is correct\n        gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER, handle);\n        gl.bindFramebuffer(GL.READ_FRAMEBUFFER, handle);\n      } else {\n        gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n      }\n    } else {\n      // handle GL.DRAW_FRAMEBUFFER and GL.READ_FRAMEBUFFER\n      gl.bindFramebuffer(target, handle);\n    }\n  },\n  blend: (gl, value) => value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\n// HELPERS\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// GETTERS AND SETTERS\n\n// Get the parameter value(s) from the context\nexport {getParameter} from '../webgl-utils/set-parameters';\n\n// Get the parameters from the context\nexport {getParameters} from '../webgl-utils/set-parameters';\n\n// Resets gl state to default values.\nexport {resetParameters} from '../webgl-utils/set-parameters';\n\n// Get the parameter value(s) from the context\nimport {setParameters as glSetParameters} from '../webgl-utils/set-parameters';\n\n// Set the parameter value(s) by key to the context\n// Sets value with key to context.\n// Value may be \"normalized\" (in case a short form is supported). In that case\n// the normalized value is retured.\nexport function setParameters(gl, parameters) {\n  glSetParameters(gl, parameters);\n  for (const key in parameters) {\n    const setter = LUMA_SETTERS[key];\n    if (setter) {\n      setter(gl, parameters[key], key);\n    }\n  }\n}\n\n// VERY LIMITED / BASIC GL STATE MANAGEMENT\n// Executes a function with gl states temporarily set, exception safe\n// Currently support pixelStorage, scissor test and framebuffer binding\nexport function withParameters(gl, parameters, func) {\n  // assertWebGLContext(gl);\n\n  const {frameBuffer, nocatch = true} = parameters;\n  let {framebuffer} = parameters;\n  if (frameBuffer) {\n    log.deprecated('withParameters({frameBuffer})', 'withParameters({framebuffer})');\n    framebuffer = frameBuffer;\n  }\n\n  // Define a helper function that will reset state after the function call\n  function resetStateAfterCall() {\n    popContextState(gl);\n  }\n\n  pushContextState(gl);\n\n  setParameters(gl, parameters);\n\n  if (framebuffer) {\n    framebuffer.bind();\n  }\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize debugging impact for safe execution paths\n    value = func(gl);\n    resetStateAfterCall();\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      resetStateAfterCall();\n    }\n  }\n  return value;\n}\n\n// DEPRECATED\n\nexport function withState(...args) {\n  log.deprecated('withState', 'withParameters');\n  return withParameters(...args);\n}\n\nexport function glContextWithState(...args) {\n  log.deprecated('glContextWithState', 'withParameters');\n  return withParameters(...args);\n}\n"]}