{"version":3,"sources":["../../../../src/experimental/probe/src/env.js"],"names":["IS_NODE","process","undefined","toString","debug","log","native","bind","warn","error","logger","timestamp","hrtime","seconds","nanoseconds","performance","now","Date"],"mappings":";;;;;;;;;8QAAA;;;AAGA;AACA;;;AACA;;;;AACA;;;;;;AAEA;AACO,IAAMA,4BAAU,QAAOC,OAAP,yCAAOA,OAAP,OAAmBC,SAAnB,IACrBD,QAAQE,QAAR,OAAuB,kBADlB;;AAGP;;AAEA;AACA;AACA,kBAAQC,KAAR,GAAgB,kBAAQA,KAAR,IAAiB,kBAAQC,GAAzC;;AAEA;AACA,kBAAQC,MAAR,GAAiB;AACfF,SAAO,kBAAQA,KAAR,CAAcG,IAAd,mBADQ;AAEfF,OAAK,kBAAQA,GAAR,CAAYE,IAAZ,mBAFU;AAGfC,QAAM,kBAAQA,IAAR,CAAaD,IAAb,mBAHS;AAIfE,SAAO,kBAAQA,KAAR,CAAcF,IAAd;AAJQ,CAAjB;;QAOmBG,M;;AAEnB;;AACA,IAAIC,kBAAJ;AACA,IAAIX,OAAJ,EAAa;AACX,UAUmBW,SAVnB,eAAY,qBAAM;AAAA,0BACeV,QAAQW,MAAR,EADf;AAAA;AAAA,QACTC,OADS;AAAA,QACAC,WADA;;AAEhB,WAAOD,UAAUC,cAAc,GAA/B;AACD,GAHD;AAID,CALD,MAKO,IAAI,iBAAOC,WAAX,EAAwB;AAC7B,UAKmBJ,SALnB,eAAY;AAAA,WAAM,iBAAOI,WAAP,CAAmBC,GAAnB,EAAN;AAAA,GAAZ;AACD,CAFM,MAEA;AACL,UAGmBL,SAHnB,eAAY;AAAA,WAAMM,KAAKD,GAAL,EAAN;AAAA,GAAZ;AACD;;QAEoBL,S,GAAbA,S","file":"env.js","sourcesContent":["/**\n * Common environment setup\n */\n/* eslint-disable no-console */\n/* global process */\nimport console from 'global/console';\nimport window from 'global/window';\n\n// Duck-type Node context\nexport const IS_NODE = typeof process !== undefined &&\n  process.toString() === '[object process]';\n\n// Configure console\n\n// Console.debug is useful in chrome as it gives blue styling, but is not\n// available in node\nconsole.debug = console.debug || console.log;\n\n// Some instrumentation may override console methods, so preserve them here\nconsole.native = {\n  debug: console.debug.bind(console),\n  log: console.log.bind(console),\n  warn: console.warn.bind(console),\n  error: console.error.bind(console)\n};\n\nexport {console as logger};\n\n// Set up high resolution timer\nlet timestamp;\nif (IS_NODE) {\n  timestamp = () => {\n    const [seconds, nanoseconds] = process.hrtime();\n    return seconds + nanoseconds / 1e6;\n  };\n} else if (window.performance) {\n  timestamp = () => window.performance.now();\n} else {\n  timestamp = () => Date.now();\n}\n\nexport {timestamp as timestamp};\n"]}