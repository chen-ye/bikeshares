{"version":3,"sources":["../../../../src/experimental/probe/src/cookie.js"],"names":["doc","cookie","undefined","get","key","splat","split","i","length","ps","k","unescape","set","value","expires","path","domain","secure","s","escape","document","exports"],"mappings":";;;;;;kBAEe,UAAUA,GAAV,EAAe;AAC5B,MAAI,CAACA,GAAL,EAAUA,MAAM,EAAN;AACV,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6BA,MAAM,EAAEC,QAAQD,GAAV,EAAN;AAC7B,MAAIA,IAAIC,MAAJ,KAAeC,SAAnB,EAA8BF,IAAIC,MAAJ,GAAa,EAAb;;AAE9B,SAAO;AACLE,OADK,eACDC,GADC,EACI;AACP,UAAMC,QAAQL,IAAIC,MAAJ,CAAWK,KAAX,CAAiB,MAAjB,CAAd;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,YAAME,KAAKJ,MAAME,CAAN,EAASD,KAAT,CAAe,GAAf,CAAX;AACA,YAAMI,IAAIC,SAASF,GAAG,CAAH,CAAT,CAAV;AACA,YAAIC,MAAMN,GAAV,EAAe;AACb,iBAAOO,SAASF,GAAG,CAAH,CAAT,CAAP;AACD;AACF;AACD,aAAOP,SAAP;AACD,KAXI;AAaLU,OAbK,eAaDR,GAbC,EAaIS,KAbJ,EAaiD;AAAA,qFAAJ,EAAI;AAAA,UAArCC,OAAqC,QAArCA,OAAqC;AAAA,UAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,UAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,UAAdC,MAAc,QAAdA,MAAc;;AACpD,UAAIC,IAAIC,OAAOf,GAAP,IAAc,GAAd,GAAoBe,OAAON,KAAP,CAA5B;AACA,UAAIC,OAAJ,EAAa;AACXI,4BAAkBJ,OAAlB;AACD;AACD,UAAIC,IAAJ,EAAU;AACRG,yBAAeC,OAAOJ,IAAP,CAAf;AACD;AACD,UAAIC,MAAJ,EAAY;AACVE,2BAAiBC,OAAOH,MAAP,CAAjB;AACD;AACD,UAAIC,MAAJ,EAAY;AACVC,aAAK,UAAL;AACD;AACDlB,UAAIC,MAAJ,GAAaiB,CAAb;AACA,aAAOA,CAAP;AACD;AA7BI,GAAP;AA+BD,C;;AAAA,C,CAtCD;AACA;;;AAuCA,IAAI,OAAOE,QAAP,KAAoB,WAAxB,EAAqC;AACnC,MAAMnB,SAASoB,QAAQD,QAAR,CAAf;AACAC,UAAQlB,GAAR,GAAcF,OAAOE,GAArB;AACAkB,UAAQT,GAAR,GAAcX,OAAOW,GAArB;AACD","file":"cookie.js","sourcesContent":["/* eslint-disable */\n// Adapted from https://github.com/substack/cookie-cutter (under MIT license)\nexport default function (doc) {\n  if (!doc) doc = {};\n  if (typeof doc === 'string') doc = { cookie: doc };\n  if (doc.cookie === undefined) doc.cookie = '';\n\n  return {\n    get(key) {\n      const splat = doc.cookie.split(/;\\s*/);\n      for (let i = 0; i < splat.length; i++) {\n        const ps = splat[i].split('=');\n        const k = unescape(ps[0]);\n        if (k === key) {\n          return unescape(ps[1]);\n        }\n      }\n      return undefined;\n    },\n\n    set(key, value, {expires, path, domain, secure} = {}) {\n      let s = escape(key) + '=' + escape(value);\n      if (expires) {\n        s += `; expires=${expires}`;\n      }\n      if (path) {\n        s += `; path=${escape(path)}`;\n      }\n      if (domain) {\n        s += `; domain=${escape(domain)}`;\n      }\n      if (secure) {\n        s += '; secure';\n      }\n      doc.cookie = s;\n      return s;\n    }\n  };\n};\n\nif (typeof document !== 'undefined') {\n  const cookie = exports(document);\n  exports.get = cookie.get;\n  exports.set = cookie.set;\n}"]}