{"version":3,"sources":["../../../../packages/io/test/write-read-image.js"],"names":["test","promisify","compressImage","loadImage","fs","path","mkdirp","TEST_DIR","join","__dirname","TEST_FILE","IMAGE","width","height","data","Uint8Array","t","file","createWriteStream","on","result","same","end","pipe"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,UAAjB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAkD,WAAlD;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,WAAWF,KAAKG,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,MAA3B,CAAjB;AACA,IAAMC,YAAYL,KAAKG,IAAL,CAAUD,QAAV,EAAoB,UAApB,CAAlB;;AAEA,IAAMI,QAAQ;AACZC,SAAO,CADK;AAEZC,UAAQ,CAFI;AAGZC,QAAM,IAAIC,UAAJ,CAAe,CACnB,GADmB,EACd,CADc,EACX,CADW,EACR,GADQ,EACH,CADG,EACA,GADA,EACK,GADL,EACU,GADV,EAEnB,CAFmB,EAEhB,CAFgB,EAEb,GAFa,EAER,GAFQ,EAEH,GAFG,EAEE,GAFF,EAEO,CAFP,EAEU,GAFV,EAGnB,CAHmB,EAGhB,GAHgB,EAGX,CAHW,EAGR,GAHQ,EAGH,GAHG,EAGE,CAHF,EAGK,GAHL,EAGU,GAHV,CAAf;AAHM,CAAd;;AAUA;AACAf,KAAK,qBAAL,EAA4B,gBAAegB,CAAf,EAAkB;AAC5C,QAAMf,UAAUK,MAAV,EAAkBC,QAAlB,CAAN;AACA,MAAMU,OAAOb,GAAGc,iBAAH,CAAqBR,SAArB,CAAb;AACAO,OAAKE,EAAL,CAAQ,OAAR,EAAiB,kBAAiB;AAChC,QAAMC,SAAS,MAAMjB,UAAUO,SAAV,CAArB;AACAM,MAAEK,IAAF,CAAOD,MAAP,EAAeT,KAAf;AACAK,MAAEM,GAAF;AACD,GAJD;AAKApB,gBAAcS,KAAd,EAAqBY,IAArB,CAA0BN,IAA1B;AACD,CATD","file":"write-read-image.js","sourcesContent":["import test from '../setup';\nimport {promisify, compressImage, loadImage} from '../../src';\nimport fs from 'fs';\nimport path from 'path';\nimport mkdirp from 'mkdirp';\n\nconst TEST_DIR = path.join(__dirname, '..', 'data');\nconst TEST_FILE = path.join(TEST_DIR, 'test.png');\n\nconst IMAGE = {\n  width: 2,\n  height: 3,\n  data: new Uint8Array([\n    255, 0, 0, 255, 0, 255, 255, 255,\n    0, 0, 255, 255, 255, 255, 0, 255,\n    0, 255, 0, 255, 255, 0, 255, 255\n  ])\n};\n\n// Test that we can write and read an image, and that result is identical\ntest('io#write-read-image', async function(t) {\n  await promisify(mkdirp)(TEST_DIR);\n  const file = fs.createWriteStream(TEST_FILE);\n  file.on('close', async function() {\n    const result = await loadImage(TEST_FILE);\n    t.same(result, IMAGE);\n    t.end();\n  });\n  compressImage(IMAGE).pipe(file);\n});\n"]}