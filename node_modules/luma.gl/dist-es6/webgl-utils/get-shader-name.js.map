{"version":3,"sources":["../../src/webgl-utils/get-shader-name.js"],"names":["GL_FRAGMENT_SHADER","GL_VERTEX_SHADER","getShaderName","shader","SHADER_NAME_REGEXP","match","getShaderTypeName","type"],"mappings":"AAAA,IAAMA,qBAAqB,MAA3B;AACA,IAAMC,mBAAmB,MAAzB;;AAEA;AACA;AACA,eAAe,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC5C,MAAMC,qBAAqB,mDAA3B;AACA,MAAMC,QAAQF,OAAOE,KAAP,CAAaD,kBAAb,CAAd;AACA,SAAOC,QAAQA,MAAM,CAAN,CAAR,GAAmB,SAA1B;AACD;;AAED,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,UAAQA,IAAR;AACA,SAAKP,kBAAL;AAAyB,aAAO,UAAP;AACzB,SAAKC,gBAAL;AAAuB,aAAO,QAAP;AACvB;AAAS,aAAO,cAAP;AAHT;AAKD","file":"get-shader-name.js","sourcesContent":["const GL_FRAGMENT_SHADER = 0x8B30;\nconst GL_VERTEX_SHADER = 0x8B31;\n\n// Supports GLSLIFY style naming of shaders\n// #define SHADER_NAME ...\nexport default function getShaderName(shader) {\n  const SHADER_NAME_REGEXP = /#define[\\s*]SHADER_NAME[\\s*]([A-Za-z0-9_-]+)[\\s*]/;\n  const match = shader.match(SHADER_NAME_REGEXP);\n  return match ? match[1] : 'unnamed';\n}\n\nexport function getShaderTypeName(type) {\n  switch (type) {\n  case GL_FRAGMENT_SHADER: return 'fragment';\n  case GL_VERTEX_SHADER: return 'vertex';\n  default: return 'unknown type';\n  }\n}\n"]}