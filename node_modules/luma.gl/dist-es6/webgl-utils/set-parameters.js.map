{"version":3,"sources":["../../src/webgl-utils/set-parameters.js"],"names":["GL","GL_PARAMETER_DEFAULTS","BLEND","BLEND_COLOR","Float32Array","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","BLEND_SRC_RGB","ONE","BLEND_DST_RGB","ZERO","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","CULL_FACE","CULL_FACE_MODE","BACK","DEPTH_TEST","DEPTH_CLEAR_VALUE","DEPTH_FUNC","LESS","DEPTH_RANGE","DEPTH_WRITEMASK","DITHER","FRAMEBUFFER_BINDING","FRONT_FACE","CCW","GENERATE_MIPMAP_HINT","DONT_CARE","LINE_WIDTH","POLYGON_OFFSET_FILL","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","SCISSOR_TEST","SCISSOR_BOX","Int32Array","STENCIL_TEST","STENCIL_CLEAR_VALUE","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","STENCIL_FUNC","ALWAYS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","VIEWPORT","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","FRAGMENT_SHADER_DERIVATIVE_HINT","READ_FRAMEBUFFER_BINDING","RASTERIZER_DISCARD","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","enable","gl","value","key","disable","hint","pixelStorei","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","bindFramebuffer","FRAMEBUFFER","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","FRONT","viewport","READ_FRAMEBUFFER","GL_PARAMETER_COMPOSITE_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","setParameters","compositeSetters","setter","Number","cache","state","mergedValues","Object","assign","compositeSetter","getParameter","getter","getParameters","parameters","parameterKeys","Array","isArray","keys","getDefaultParameters","resetParameters"],"mappings":"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","file":"set-parameters.js","sourcesContent":["// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport GL from './constants';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\n// NOTE: When value type is a string, it will be handled by 'GL_PARAMETER_COMPOSITE_SETTERS'\n\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: (gl, value) => gl.bindFramebuffer(GL.FRAMEBUFFER, value),\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: (gl, value) => gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value),\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\nconst GL_PARAMETER_COMPOSITE_SETTERS = {\n  blendEquation: (gl, values) => gl.blendEquationSeparate(\n    values[GL.BLEND_EQUATION_RGB],\n    values[GL.BLEND_EQUATION_ALPHA]\n  ),\n  blendFunc: (gl, values) => gl.blendFuncSeparate(\n    values[GL.BLEND_SRC_RGB],\n    values[GL.BLEND_DST_RGB],\n    values[GL.BLEND_SRC_ALPHA],\n    values[GL.BLEND_DST_ALPHA]\n  ),\n  polygonOffset: (gl, values) => gl.polygonOffset(\n    values[GL.POLYGON_OFFSET_FACTOR],\n    values[GL.POLYGON_OFFSET_UNITS]\n  ),\n  sampleCoverage: (gl, values) => gl.sampleCoverage(\n    values[GL.SAMPLE_COVERAGE_VALUE],\n    values[GL.SAMPLE_COVERAGE_INVERT]\n  ),\n  stencilFuncFront: (gl, values) => gl.stencilFuncSeparate(GL.FRONT,\n    values[GL.STENCIL_FUNC],\n    values[GL.STENCIL_REF],\n    values[GL.STENCIL_VALUE_MASK]\n  ),\n  stencilFuncBack: (gl, values) => gl.stencilFuncSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FUNC],\n    values[GL.STENCIL_BACK_REF],\n    values[GL.STENCIL_BACK_VALUE_MASK]\n  ),\n  stencilOpFront: (gl, values) => gl.stencilOpSeparate(GL.FRONT,\n    values[GL.STENCIL_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_PASS]\n  ),\n  stencilOpBack: (gl, values) => gl.stencilOpSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n  )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\n// PUBLIC METHODS\n\n// Sets any GL parameter regardless of function (gl.blendMode, ...)\n// Note: requires a `cache` object to be set on the context (gl.state.cache)\n// This object is used to fill in any missing values for composite setter functions\nexport function setParameters(gl, values) {\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in values) {\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      // only call setter if value has changed\n      // TODO - deep equal on values?\n      } else {\n        // Note - the setter will automatically update this.state\n        setter(gl, values[key], Number(key));\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    const mergedValues = Object.assign({}, cache, values);\n\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = GL_PARAMETER_COMPOSITE_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, mergedValues);\n    }\n  }\n  // Add a log for the else case?\n}\n\n// Queries any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\nexport function getParameter(gl, key) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  return getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n}\n\n// Copies the state from a context (gl.getParameter should not be overriden)\n// Reads the entire WebGL state from a context\n// Caveat: This generates a huge amount of synchronous driver roundtrips and should be\n// considered a very slow operation, to be used only if/when a context already manipulated\n// by external code needs to be synchronized for the first time\n// @return {Object} - a newly created map, with values keyed by GL parameters\nexport function getParameters(gl, parameters) {\n  // default to querying all parameters\n  parameters = parameters || GL_PARAMETER_DEFAULTS;\n  // support both arrays of parameters and objects (keys represent parameters)\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    state[key] = getParameter(gl, key);\n  }\n  return state;\n}\n\nexport function getDefaultParameters(gl) {\n  // TODO - Query GL.VIEWPORT and GL.SCISSOR_BOX since these are dynamic\n  return Object.assign({}, GL_PARAMETER_DEFAULTS, {\n    // TODO: For viewport and scissor default values are set at the time of\n    // context creation based on canvas size, we can query them here but it will\n    // not match with what we have in GL_PARAMETER_DEFAULTS table, we should revisit.\n    // [GL.VIEWPORT]: gl.constructor.prototype.getParameter.call(gl, GL.VIEWPORT),\n    // [GL.SCISSOR_BOX]: gl.constructor.prototype.getParameter.call(gl, GL.SCISSOR_BOX)\n  });\n}\n\nexport function resetParameters(gl) {\n  setParameters(gl, getDefaultParameters(gl));\n}\n"]}