{"filter":false,"title":"scrap.js","tooltip":"/scrap.js","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["","","// const handleFiles = (evt) => {","// \tconst fileAddPromises = [];","//   const fileList = evt.target.files;","//   const progress = {","//   \ttotalTrips: 0,","//     addedTrips: 0,","//   };","//   for (let i = 0; i < fileList.length; i++) {","//   \tcsvFile = evt.target.files[i];","//     if(csvFile && csvFile.type == \"text/csv\") {","//       const csvReader = new FileReader();","//       csvReader.addEventListener(\"load\", (evt) => {","//         const csvText = event.target.result;","//         const csvMeta = addTrips(networkId, csvText, progress);","//         progress.totalTrips += csvMeta.totalTrips;","//         fileAddPromises.push(csvMeta.promise);","//   \t\t\tupdateProgress(`Processing ${progress.totalTrips} Trips`, progress);","//       });","//       csvReader.readAsText(csvFile);","//     }","//   }","  ","//   Promise.all(fileAddPromises).then(() => {","//   \t//progressElement.textContent = \"Database Add Complete\";","//   });","// }","","// const addTrips = (networkId, csv, progress) => {","// \ttripsAddPromises = [];","//   tripsData = d3.csvParse(csv);","//   tripsData.forEach((trip) => {","//   \tconst docRef = db.collection(\"networks\").doc(networkId).collection(\"trips\")","//     \t\t.doc(Date.parse(trip.starttime).toString());","//   \ttripsAddPromises.push(","//     \tdocRef.set(trip).then(() => {","//         \tprogress.addedTrips += 1;","//           updateProgress(`${progress.addedTrips}/${progress.totalTrips} Trips`, progress);","//         })","//     );","//   });","//   return {","//     promise: Promise.all(tripsAddPromises),","//     totalTrips: tripsData.length,","//   }","// }",""],"id":1}],[{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":48,"column":0},"end":{"row":82,"column":4},"action":"insert","lines":["// const routeTripById = (startId, endId, networkId) => {","// \tconst stationsRef = db.collection(\"networks\").doc(networkId).collection(\"stations\");","//   const startStationRef = stationsRef.doc(startId);","//   startStationRef.get().then((startDoc) => {","//     const startStation = startDoc.data();","//     const routeRef = startStationRef.collection(\"routes\").doc(endId);","//     routeRef.get().then((routeDoc) => {","//     \tif (!routeDoc.exists) {","//       \tstationsRef.doc(endId).get().then((endDoc) => {","//           const endStation = endDoc.data();","//           const routeOptions = Object.assign({","//             locations: [","//               { lat: startStation.latitude, lon: startStation.longitude },","//               { lat: endStation.latitude, lon: endStation.longitude },","//             ],","//           }, routerOptions);","//           this.fetch(`https://valhalla.mapzen.com/route?json=${JSON.stringify(routeOptions)}&api_key=${mapzenKey}`).then((response) => {","//           console.log(response.ok);","//           if(response.ok) {","//             return response.json();","//           }","//           throw new Error('Network response was not ok.');","//           }).then((json) => {","//           \tif(json.trip.status == 0) {","// \t\t\t\t\t\t\trouteRef.set(json.trip.legs[0]);","//             }","//           }).catch((error) => {","//             console.log(error);","//           });","//         });","//       }","//     })","    ","//   });","// }"],"id":3}],[{"start":{"row":82,"column":4},"end":{"row":83,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":83,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":84,"column":0},"end":{"row":103,"column":13},"action":"insert","lines":["","        // stationsRef.doc(station.id).collection(\"routes\").orderBy(\"frequency\").limit(2).get().then((querySnapshot) => {","        // \tquerySnapshot.forEach((doc) => {","        //   \tconsole.log(\"check\");","        //   \tconsole.log(doc.data());","        //   })","        // });","        ","        //stationsRef.doc(station.id).collection(\"routes\").onSnapshot((querySnapshot) => {","        //\tquerySnapshot.docChanges.forEach((change) => {","        //  \tconst route = change.doc.data();","        //    console.log(\"check\");","        //    if (change.type === \"added\") {","        //    \tif (route.shape) {","        //      \tconst routeCoordinates = polylineDecode(route.shape);","        //    \t\tconst routePolyline = L.polyline(routeCoordinates, {color: \"#177EA3\", opacity: .2}).addTo(routesLayer);","        //      }","        //    }","        //  })","        //});"],"id":6}],[{"start":{"row":103,"column":13},"end":{"row":104,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":104,"column":0},"end":{"row":104,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":104,"column":8},"end":{"row":105,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":105,"column":0},"end":{"row":105,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":105,"column":8},"end":{"row":108,"column":63},"action":"insert","lines":["","","// const inputElement = document.getElementById(\"input\");","// inputElement.addEventListener(\"change\", handleFiles, false);"],"id":9}]]},"ace":{"folds":[],"scrolltop":1047.5,"scrollleft":5,"selection":{"start":{"row":98,"column":42},"end":{"row":98,"column":50},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":295,"mode":"ace/mode/javascript"}},"timestamp":1512508830571,"hash":"ebe18be54f55ab74cb21de51125baf095032e555"}